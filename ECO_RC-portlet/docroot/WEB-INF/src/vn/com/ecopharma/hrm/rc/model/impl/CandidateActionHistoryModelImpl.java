/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.com.ecopharma.hrm.rc.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.com.ecopharma.hrm.rc.model.CandidateActionHistory;
import vn.com.ecopharma.hrm.rc.model.CandidateActionHistoryModel;
import vn.com.ecopharma.hrm.rc.model.CandidateActionHistorySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the CandidateActionHistory service. Represents a row in the &quot;eco_rcp_CandidateActionHistory&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.com.ecopharma.hrm.rc.model.CandidateActionHistoryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CandidateActionHistoryImpl}.
 * </p>
 *
 * @author tvt
 * @see CandidateActionHistoryImpl
 * @see vn.com.ecopharma.hrm.rc.model.CandidateActionHistory
 * @see vn.com.ecopharma.hrm.rc.model.CandidateActionHistoryModel
 * @generated
 */
@JSON(strict = true)
public class CandidateActionHistoryModelImpl extends BaseModelImpl<CandidateActionHistory>
	implements CandidateActionHistoryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a candidate action history model instance should use the {@link vn.com.ecopharma.hrm.rc.model.CandidateActionHistory} interface instead.
	 */
	public static final String TABLE_NAME = "eco_rcp_CandidateActionHistory";
	public static final Object[][] TABLE_COLUMNS = {
			{ "candidateActionHistoryId", Types.BIGINT },
			{ "candidateId", Types.BIGINT },
			{ "action", Types.VARCHAR },
			{ "actionType", Types.VARCHAR },
			{ "executedBy", Types.BIGINT },
			{ "date_", Types.TIMESTAMP },
			{ "description", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table eco_rcp_CandidateActionHistory (candidateActionHistoryId LONG not null primary key,candidateId LONG,action VARCHAR(75) null,actionType VARCHAR(75) null,executedBy LONG,date_ DATE null,description VARCHAR(75) null,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table eco_rcp_CandidateActionHistory";
	public static final String ORDER_BY_JPQL = " ORDER BY candidateActionHistory.candidateActionHistoryId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY eco_rcp_CandidateActionHistory.candidateActionHistoryId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.com.ecopharma.hrm.rc.model.CandidateActionHistory"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.com.ecopharma.hrm.rc.model.CandidateActionHistory"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.com.ecopharma.hrm.rc.model.CandidateActionHistory"),
			true);
	public static long ACTION_COLUMN_BITMASK = 1L;
	public static long ACTIONTYPE_COLUMN_BITMASK = 2L;
	public static long CANDIDATEID_COLUMN_BITMASK = 4L;
	public static long CANDIDATEACTIONHISTORYID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static CandidateActionHistory toModel(
		CandidateActionHistorySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		CandidateActionHistory model = new CandidateActionHistoryImpl();

		model.setCandidateActionHistoryId(soapModel.getCandidateActionHistoryId());
		model.setCandidateId(soapModel.getCandidateId());
		model.setAction(soapModel.getAction());
		model.setActionType(soapModel.getActionType());
		model.setExecutedBy(soapModel.getExecutedBy());
		model.setDate(soapModel.getDate());
		model.setDescription(soapModel.getDescription());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<CandidateActionHistory> toModels(
		CandidateActionHistorySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<CandidateActionHistory> models = new ArrayList<CandidateActionHistory>(soapModels.length);

		for (CandidateActionHistorySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.com.ecopharma.hrm.rc.model.CandidateActionHistory"));

	public CandidateActionHistoryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _candidateActionHistoryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setCandidateActionHistoryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _candidateActionHistoryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CandidateActionHistory.class;
	}

	@Override
	public String getModelClassName() {
		return CandidateActionHistory.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("candidateActionHistoryId", getCandidateActionHistoryId());
		attributes.put("candidateId", getCandidateId());
		attributes.put("action", getAction());
		attributes.put("actionType", getActionType());
		attributes.put("executedBy", getExecutedBy());
		attributes.put("date", getDate());
		attributes.put("description", getDescription());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long candidateActionHistoryId = (Long)attributes.get(
				"candidateActionHistoryId");

		if (candidateActionHistoryId != null) {
			setCandidateActionHistoryId(candidateActionHistoryId);
		}

		Long candidateId = (Long)attributes.get("candidateId");

		if (candidateId != null) {
			setCandidateId(candidateId);
		}

		String action = (String)attributes.get("action");

		if (action != null) {
			setAction(action);
		}

		String actionType = (String)attributes.get("actionType");

		if (actionType != null) {
			setActionType(actionType);
		}

		Long executedBy = (Long)attributes.get("executedBy");

		if (executedBy != null) {
			setExecutedBy(executedBy);
		}

		Date date = (Date)attributes.get("date");

		if (date != null) {
			setDate(date);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public long getCandidateActionHistoryId() {
		return _candidateActionHistoryId;
	}

	@Override
	public void setCandidateActionHistoryId(long candidateActionHistoryId) {
		_candidateActionHistoryId = candidateActionHistoryId;
	}

	@JSON
	@Override
	public long getCandidateId() {
		return _candidateId;
	}

	@Override
	public void setCandidateId(long candidateId) {
		_columnBitmask |= CANDIDATEID_COLUMN_BITMASK;

		if (!_setOriginalCandidateId) {
			_setOriginalCandidateId = true;

			_originalCandidateId = _candidateId;
		}

		_candidateId = candidateId;
	}

	public long getOriginalCandidateId() {
		return _originalCandidateId;
	}

	@JSON
	@Override
	public String getAction() {
		if (_action == null) {
			return StringPool.BLANK;
		}
		else {
			return _action;
		}
	}

	@Override
	public void setAction(String action) {
		_columnBitmask |= ACTION_COLUMN_BITMASK;

		if (_originalAction == null) {
			_originalAction = _action;
		}

		_action = action;
	}

	public String getOriginalAction() {
		return GetterUtil.getString(_originalAction);
	}

	@JSON
	@Override
	public String getActionType() {
		if (_actionType == null) {
			return StringPool.BLANK;
		}
		else {
			return _actionType;
		}
	}

	@Override
	public void setActionType(String actionType) {
		_columnBitmask |= ACTIONTYPE_COLUMN_BITMASK;

		if (_originalActionType == null) {
			_originalActionType = _actionType;
		}

		_actionType = actionType;
	}

	public String getOriginalActionType() {
		return GetterUtil.getString(_originalActionType);
	}

	@JSON
	@Override
	public long getExecutedBy() {
		return _executedBy;
	}

	@Override
	public void setExecutedBy(long executedBy) {
		_executedBy = executedBy;
	}

	@JSON
	@Override
	public Date getDate() {
		return _date;
	}

	@Override
	public void setDate(Date date) {
		_date = date;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			CandidateActionHistory.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public CandidateActionHistory toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CandidateActionHistory)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CandidateActionHistoryImpl candidateActionHistoryImpl = new CandidateActionHistoryImpl();

		candidateActionHistoryImpl.setCandidateActionHistoryId(getCandidateActionHistoryId());
		candidateActionHistoryImpl.setCandidateId(getCandidateId());
		candidateActionHistoryImpl.setAction(getAction());
		candidateActionHistoryImpl.setActionType(getActionType());
		candidateActionHistoryImpl.setExecutedBy(getExecutedBy());
		candidateActionHistoryImpl.setDate(getDate());
		candidateActionHistoryImpl.setDescription(getDescription());
		candidateActionHistoryImpl.setGroupId(getGroupId());
		candidateActionHistoryImpl.setCompanyId(getCompanyId());
		candidateActionHistoryImpl.setUserId(getUserId());
		candidateActionHistoryImpl.setUserName(getUserName());
		candidateActionHistoryImpl.setCreateDate(getCreateDate());
		candidateActionHistoryImpl.setModifiedDate(getModifiedDate());

		candidateActionHistoryImpl.resetOriginalValues();

		return candidateActionHistoryImpl;
	}

	@Override
	public int compareTo(CandidateActionHistory candidateActionHistory) {
		long primaryKey = candidateActionHistory.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CandidateActionHistory)) {
			return false;
		}

		CandidateActionHistory candidateActionHistory = (CandidateActionHistory)obj;

		long primaryKey = candidateActionHistory.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		CandidateActionHistoryModelImpl candidateActionHistoryModelImpl = this;

		candidateActionHistoryModelImpl._originalCandidateId = candidateActionHistoryModelImpl._candidateId;

		candidateActionHistoryModelImpl._setOriginalCandidateId = false;

		candidateActionHistoryModelImpl._originalAction = candidateActionHistoryModelImpl._action;

		candidateActionHistoryModelImpl._originalActionType = candidateActionHistoryModelImpl._actionType;

		candidateActionHistoryModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CandidateActionHistory> toCacheModel() {
		CandidateActionHistoryCacheModel candidateActionHistoryCacheModel = new CandidateActionHistoryCacheModel();

		candidateActionHistoryCacheModel.candidateActionHistoryId = getCandidateActionHistoryId();

		candidateActionHistoryCacheModel.candidateId = getCandidateId();

		candidateActionHistoryCacheModel.action = getAction();

		String action = candidateActionHistoryCacheModel.action;

		if ((action != null) && (action.length() == 0)) {
			candidateActionHistoryCacheModel.action = null;
		}

		candidateActionHistoryCacheModel.actionType = getActionType();

		String actionType = candidateActionHistoryCacheModel.actionType;

		if ((actionType != null) && (actionType.length() == 0)) {
			candidateActionHistoryCacheModel.actionType = null;
		}

		candidateActionHistoryCacheModel.executedBy = getExecutedBy();

		Date date = getDate();

		if (date != null) {
			candidateActionHistoryCacheModel.date = date.getTime();
		}
		else {
			candidateActionHistoryCacheModel.date = Long.MIN_VALUE;
		}

		candidateActionHistoryCacheModel.description = getDescription();

		String description = candidateActionHistoryCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			candidateActionHistoryCacheModel.description = null;
		}

		candidateActionHistoryCacheModel.groupId = getGroupId();

		candidateActionHistoryCacheModel.companyId = getCompanyId();

		candidateActionHistoryCacheModel.userId = getUserId();

		candidateActionHistoryCacheModel.userName = getUserName();

		String userName = candidateActionHistoryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			candidateActionHistoryCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			candidateActionHistoryCacheModel.createDate = createDate.getTime();
		}
		else {
			candidateActionHistoryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			candidateActionHistoryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			candidateActionHistoryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return candidateActionHistoryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{candidateActionHistoryId=");
		sb.append(getCandidateActionHistoryId());
		sb.append(", candidateId=");
		sb.append(getCandidateId());
		sb.append(", action=");
		sb.append(getAction());
		sb.append(", actionType=");
		sb.append(getActionType());
		sb.append(", executedBy=");
		sb.append(getExecutedBy());
		sb.append(", date=");
		sb.append(getDate());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("vn.com.ecopharma.hrm.rc.model.CandidateActionHistory");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>candidateActionHistoryId</column-name><column-value><![CDATA[");
		sb.append(getCandidateActionHistoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>candidateId</column-name><column-value><![CDATA[");
		sb.append(getCandidateId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>action</column-name><column-value><![CDATA[");
		sb.append(getAction());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actionType</column-name><column-value><![CDATA[");
		sb.append(getActionType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>executedBy</column-name><column-value><![CDATA[");
		sb.append(getExecutedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>date</column-name><column-value><![CDATA[");
		sb.append(getDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = CandidateActionHistory.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			CandidateActionHistory.class
		};
	private long _candidateActionHistoryId;
	private long _candidateId;
	private long _originalCandidateId;
	private boolean _setOriginalCandidateId;
	private String _action;
	private String _originalAction;
	private String _actionType;
	private String _originalActionType;
	private long _executedBy;
	private Date _date;
	private String _description;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private CandidateActionHistory _escapedModel;
}