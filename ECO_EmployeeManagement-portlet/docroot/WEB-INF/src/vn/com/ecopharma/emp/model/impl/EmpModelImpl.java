/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.com.ecopharma.emp.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.com.ecopharma.emp.model.Emp;
import vn.com.ecopharma.emp.model.EmpModel;
import vn.com.ecopharma.emp.model.EmpSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Emp service. Represents a row in the &quot;eco_em_portlet_Emp&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.com.ecopharma.emp.model.EmpModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmpImpl}.
 * </p>
 *
 * @author tvt
 * @see EmpImpl
 * @see vn.com.ecopharma.emp.model.Emp
 * @see vn.com.ecopharma.emp.model.EmpModel
 * @generated
 */
@JSON(strict = true)
public class EmpModelImpl extends BaseModelImpl<Emp> implements EmpModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a emp model instance should use the {@link vn.com.ecopharma.emp.model.Emp} interface instead.
	 */
	public static final String TABLE_NAME = "eco_em_portlet_Emp";
	public static final Object[][] TABLE_COLUMNS = {
			{ "empId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "empCode", Types.VARCHAR },
			{ "contactNumber", Types.VARCHAR },
			{ "extNumber", Types.VARCHAR },
			{ "birthday", Types.TIMESTAMP },
			{ "ethnic", Types.VARCHAR },
			{ "nationality", Types.VARCHAR },
			{ "religion", Types.VARCHAR },
			{ "joinedDate", Types.TIMESTAMP },
			{ "titlesId", Types.BIGINT },
			{ "levelId", Types.BIGINT },
			{ "promotedDate", Types.TIMESTAMP },
			{ "laborContractSignedDate", Types.TIMESTAMP },
			{ "laborContractExpiredDate", Types.TIMESTAMP },
			{ "laborContractSignedTime", Types.INTEGER },
			{ "laborContractType", Types.VARCHAR },
			{ "gender", Types.VARCHAR },
			{ "placeOfBirth", Types.VARCHAR },
			{ "education", Types.VARCHAR },
			{ "educationSpecialize", Types.VARCHAR },
			{ "specializeId", Types.BIGINT },
			{ "universityId", Types.BIGINT },
			{ "maritalStatus", Types.VARCHAR },
			{ "identityCardNo", Types.VARCHAR },
			{ "issuedDate", Types.TIMESTAMP },
			{ "issuedPlace", Types.VARCHAR },
			{ "passport", Types.VARCHAR },
			{ "addressId", Types.BIGINT },
			{ "companyEmail", Types.VARCHAR },
			{ "personalTaxCode", Types.VARCHAR },
			{ "numberOfDependents", Types.INTEGER },
			{ "dependentNames", Types.VARCHAR },
			{ "socialInsuranceNo", Types.VARCHAR },
			{ "healthInsuranceNo", Types.VARCHAR },
			{ "healthInsurancePlace", Types.VARCHAR },
			{ "baseWageRates", Types.DOUBLE },
			{ "positionWageRates", Types.DOUBLE },
			{ "capacitySalary", Types.DOUBLE },
			{ "totalSalary", Types.DOUBLE },
			{ "bonus", Types.DOUBLE },
			{ "resignedDate", Types.TIMESTAMP },
			{ "empUserId", Types.BIGINT },
			{ "deleted", Types.BOOLEAN },
			{ "companyEmailAddress", Types.VARCHAR },
			{ "workingPlaceId", Types.BIGINT },
			{ "status", Types.VARCHAR },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "unitId", Types.BIGINT },
			{ "unitGroupId", Types.BIGINT },
			{ "departmentId", Types.BIGINT }
		};
	public static final String TABLE_SQL_CREATE = "create table eco_em_portlet_Emp (empId LONG not null primary key,groupId LONG,empCode VARCHAR(75) null,contactNumber VARCHAR(75) null,extNumber VARCHAR(75) null,birthday DATE null,ethnic VARCHAR(75) null,nationality VARCHAR(75) null,religion VARCHAR(75) null,joinedDate DATE null,titlesId LONG,levelId LONG,promotedDate DATE null,laborContractSignedDate DATE null,laborContractExpiredDate DATE null,laborContractSignedTime INTEGER,laborContractType VARCHAR(75) null,gender VARCHAR(75) null,placeOfBirth VARCHAR(75) null,education VARCHAR(75) null,educationSpecialize VARCHAR(75) null,specializeId LONG,universityId LONG,maritalStatus VARCHAR(75) null,identityCardNo VARCHAR(75) null,issuedDate DATE null,issuedPlace VARCHAR(75) null,passport VARCHAR(75) null,addressId LONG,companyEmail VARCHAR(75) null,personalTaxCode VARCHAR(75) null,numberOfDependents INTEGER,dependentNames VARCHAR(75) null,socialInsuranceNo VARCHAR(75) null,healthInsuranceNo VARCHAR(75) null,healthInsurancePlace VARCHAR(75) null,baseWageRates DOUBLE,positionWageRates DOUBLE,capacitySalary DOUBLE,totalSalary DOUBLE,bonus DOUBLE,resignedDate DATE null,empUserId LONG,deleted BOOLEAN,companyEmailAddress VARCHAR(75) null,workingPlaceId LONG,status VARCHAR(75) null,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,unitId LONG,unitGroupId LONG,departmentId LONG)";
	public static final String TABLE_SQL_DROP = "drop table eco_em_portlet_Emp";
	public static final String ORDER_BY_JPQL = " ORDER BY emp.empId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY eco_em_portlet_Emp.empId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.com.ecopharma.emp.model.Emp"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.com.ecopharma.emp.model.Emp"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.com.ecopharma.emp.model.Emp"),
			true);
	public static long EMPCODE_COLUMN_BITMASK = 1L;
	public static long EMPUSERID_COLUMN_BITMASK = 2L;
	public static long STATUS_COLUMN_BITMASK = 4L;
	public static long TITLESID_COLUMN_BITMASK = 8L;
	public static long EMPID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Emp toModel(EmpSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Emp model = new EmpImpl();

		model.setEmpId(soapModel.getEmpId());
		model.setGroupId(soapModel.getGroupId());
		model.setEmpCode(soapModel.getEmpCode());
		model.setContactNumber(soapModel.getContactNumber());
		model.setExtNumber(soapModel.getExtNumber());
		model.setBirthday(soapModel.getBirthday());
		model.setEthnic(soapModel.getEthnic());
		model.setNationality(soapModel.getNationality());
		model.setReligion(soapModel.getReligion());
		model.setJoinedDate(soapModel.getJoinedDate());
		model.setTitlesId(soapModel.getTitlesId());
		model.setLevelId(soapModel.getLevelId());
		model.setPromotedDate(soapModel.getPromotedDate());
		model.setLaborContractSignedDate(soapModel.getLaborContractSignedDate());
		model.setLaborContractExpiredDate(soapModel.getLaborContractExpiredDate());
		model.setLaborContractSignedTime(soapModel.getLaborContractSignedTime());
		model.setLaborContractType(soapModel.getLaborContractType());
		model.setGender(soapModel.getGender());
		model.setPlaceOfBirth(soapModel.getPlaceOfBirth());
		model.setEducation(soapModel.getEducation());
		model.setEducationSpecialize(soapModel.getEducationSpecialize());
		model.setSpecializeId(soapModel.getSpecializeId());
		model.setUniversityId(soapModel.getUniversityId());
		model.setMaritalStatus(soapModel.getMaritalStatus());
		model.setIdentityCardNo(soapModel.getIdentityCardNo());
		model.setIssuedDate(soapModel.getIssuedDate());
		model.setIssuedPlace(soapModel.getIssuedPlace());
		model.setPassport(soapModel.getPassport());
		model.setAddressId(soapModel.getAddressId());
		model.setCompanyEmail(soapModel.getCompanyEmail());
		model.setPersonalTaxCode(soapModel.getPersonalTaxCode());
		model.setNumberOfDependents(soapModel.getNumberOfDependents());
		model.setDependentNames(soapModel.getDependentNames());
		model.setSocialInsuranceNo(soapModel.getSocialInsuranceNo());
		model.setHealthInsuranceNo(soapModel.getHealthInsuranceNo());
		model.setHealthInsurancePlace(soapModel.getHealthInsurancePlace());
		model.setBaseWageRates(soapModel.getBaseWageRates());
		model.setPositionWageRates(soapModel.getPositionWageRates());
		model.setCapacitySalary(soapModel.getCapacitySalary());
		model.setTotalSalary(soapModel.getTotalSalary());
		model.setBonus(soapModel.getBonus());
		model.setResignedDate(soapModel.getResignedDate());
		model.setEmpUserId(soapModel.getEmpUserId());
		model.setDeleted(soapModel.getDeleted());
		model.setCompanyEmailAddress(soapModel.getCompanyEmailAddress());
		model.setWorkingPlaceId(soapModel.getWorkingPlaceId());
		model.setStatus(soapModel.getStatus());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setUnitId(soapModel.getUnitId());
		model.setUnitGroupId(soapModel.getUnitGroupId());
		model.setDepartmentId(soapModel.getDepartmentId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Emp> toModels(EmpSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Emp> models = new ArrayList<Emp>(soapModels.length);

		for (EmpSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.com.ecopharma.emp.model.Emp"));

	public EmpModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _empId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmpId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _empId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Emp.class;
	}

	@Override
	public String getModelClassName() {
		return Emp.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("empId", getEmpId());
		attributes.put("groupId", getGroupId());
		attributes.put("empCode", getEmpCode());
		attributes.put("contactNumber", getContactNumber());
		attributes.put("extNumber", getExtNumber());
		attributes.put("birthday", getBirthday());
		attributes.put("ethnic", getEthnic());
		attributes.put("nationality", getNationality());
		attributes.put("religion", getReligion());
		attributes.put("joinedDate", getJoinedDate());
		attributes.put("titlesId", getTitlesId());
		attributes.put("levelId", getLevelId());
		attributes.put("promotedDate", getPromotedDate());
		attributes.put("laborContractSignedDate", getLaborContractSignedDate());
		attributes.put("laborContractExpiredDate", getLaborContractExpiredDate());
		attributes.put("laborContractSignedTime", getLaborContractSignedTime());
		attributes.put("laborContractType", getLaborContractType());
		attributes.put("gender", getGender());
		attributes.put("placeOfBirth", getPlaceOfBirth());
		attributes.put("education", getEducation());
		attributes.put("educationSpecialize", getEducationSpecialize());
		attributes.put("specializeId", getSpecializeId());
		attributes.put("universityId", getUniversityId());
		attributes.put("maritalStatus", getMaritalStatus());
		attributes.put("identityCardNo", getIdentityCardNo());
		attributes.put("issuedDate", getIssuedDate());
		attributes.put("issuedPlace", getIssuedPlace());
		attributes.put("passport", getPassport());
		attributes.put("addressId", getAddressId());
		attributes.put("companyEmail", getCompanyEmail());
		attributes.put("personalTaxCode", getPersonalTaxCode());
		attributes.put("numberOfDependents", getNumberOfDependents());
		attributes.put("dependentNames", getDependentNames());
		attributes.put("socialInsuranceNo", getSocialInsuranceNo());
		attributes.put("healthInsuranceNo", getHealthInsuranceNo());
		attributes.put("healthInsurancePlace", getHealthInsurancePlace());
		attributes.put("baseWageRates", getBaseWageRates());
		attributes.put("positionWageRates", getPositionWageRates());
		attributes.put("capacitySalary", getCapacitySalary());
		attributes.put("totalSalary", getTotalSalary());
		attributes.put("bonus", getBonus());
		attributes.put("resignedDate", getResignedDate());
		attributes.put("empUserId", getEmpUserId());
		attributes.put("deleted", getDeleted());
		attributes.put("companyEmailAddress", getCompanyEmailAddress());
		attributes.put("workingPlaceId", getWorkingPlaceId());
		attributes.put("status", getStatus());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("unitId", getUnitId());
		attributes.put("unitGroupId", getUnitGroupId());
		attributes.put("departmentId", getDepartmentId());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long empId = (Long)attributes.get("empId");

		if (empId != null) {
			setEmpId(empId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		String empCode = (String)attributes.get("empCode");

		if (empCode != null) {
			setEmpCode(empCode);
		}

		String contactNumber = (String)attributes.get("contactNumber");

		if (contactNumber != null) {
			setContactNumber(contactNumber);
		}

		String extNumber = (String)attributes.get("extNumber");

		if (extNumber != null) {
			setExtNumber(extNumber);
		}

		Date birthday = (Date)attributes.get("birthday");

		if (birthday != null) {
			setBirthday(birthday);
		}

		String ethnic = (String)attributes.get("ethnic");

		if (ethnic != null) {
			setEthnic(ethnic);
		}

		String nationality = (String)attributes.get("nationality");

		if (nationality != null) {
			setNationality(nationality);
		}

		String religion = (String)attributes.get("religion");

		if (religion != null) {
			setReligion(religion);
		}

		Date joinedDate = (Date)attributes.get("joinedDate");

		if (joinedDate != null) {
			setJoinedDate(joinedDate);
		}

		Long titlesId = (Long)attributes.get("titlesId");

		if (titlesId != null) {
			setTitlesId(titlesId);
		}

		Long levelId = (Long)attributes.get("levelId");

		if (levelId != null) {
			setLevelId(levelId);
		}

		Date promotedDate = (Date)attributes.get("promotedDate");

		if (promotedDate != null) {
			setPromotedDate(promotedDate);
		}

		Date laborContractSignedDate = (Date)attributes.get(
				"laborContractSignedDate");

		if (laborContractSignedDate != null) {
			setLaborContractSignedDate(laborContractSignedDate);
		}

		Date laborContractExpiredDate = (Date)attributes.get(
				"laborContractExpiredDate");

		if (laborContractExpiredDate != null) {
			setLaborContractExpiredDate(laborContractExpiredDate);
		}

		Integer laborContractSignedTime = (Integer)attributes.get(
				"laborContractSignedTime");

		if (laborContractSignedTime != null) {
			setLaborContractSignedTime(laborContractSignedTime);
		}

		String laborContractType = (String)attributes.get("laborContractType");

		if (laborContractType != null) {
			setLaborContractType(laborContractType);
		}

		String gender = (String)attributes.get("gender");

		if (gender != null) {
			setGender(gender);
		}

		String placeOfBirth = (String)attributes.get("placeOfBirth");

		if (placeOfBirth != null) {
			setPlaceOfBirth(placeOfBirth);
		}

		String education = (String)attributes.get("education");

		if (education != null) {
			setEducation(education);
		}

		String educationSpecialize = (String)attributes.get(
				"educationSpecialize");

		if (educationSpecialize != null) {
			setEducationSpecialize(educationSpecialize);
		}

		Long specializeId = (Long)attributes.get("specializeId");

		if (specializeId != null) {
			setSpecializeId(specializeId);
		}

		Long universityId = (Long)attributes.get("universityId");

		if (universityId != null) {
			setUniversityId(universityId);
		}

		String maritalStatus = (String)attributes.get("maritalStatus");

		if (maritalStatus != null) {
			setMaritalStatus(maritalStatus);
		}

		String identityCardNo = (String)attributes.get("identityCardNo");

		if (identityCardNo != null) {
			setIdentityCardNo(identityCardNo);
		}

		Date issuedDate = (Date)attributes.get("issuedDate");

		if (issuedDate != null) {
			setIssuedDate(issuedDate);
		}

		String issuedPlace = (String)attributes.get("issuedPlace");

		if (issuedPlace != null) {
			setIssuedPlace(issuedPlace);
		}

		String passport = (String)attributes.get("passport");

		if (passport != null) {
			setPassport(passport);
		}

		Long addressId = (Long)attributes.get("addressId");

		if (addressId != null) {
			setAddressId(addressId);
		}

		String companyEmail = (String)attributes.get("companyEmail");

		if (companyEmail != null) {
			setCompanyEmail(companyEmail);
		}

		String personalTaxCode = (String)attributes.get("personalTaxCode");

		if (personalTaxCode != null) {
			setPersonalTaxCode(personalTaxCode);
		}

		Integer numberOfDependents = (Integer)attributes.get(
				"numberOfDependents");

		if (numberOfDependents != null) {
			setNumberOfDependents(numberOfDependents);
		}

		String dependentNames = (String)attributes.get("dependentNames");

		if (dependentNames != null) {
			setDependentNames(dependentNames);
		}

		String socialInsuranceNo = (String)attributes.get("socialInsuranceNo");

		if (socialInsuranceNo != null) {
			setSocialInsuranceNo(socialInsuranceNo);
		}

		String healthInsuranceNo = (String)attributes.get("healthInsuranceNo");

		if (healthInsuranceNo != null) {
			setHealthInsuranceNo(healthInsuranceNo);
		}

		String healthInsurancePlace = (String)attributes.get(
				"healthInsurancePlace");

		if (healthInsurancePlace != null) {
			setHealthInsurancePlace(healthInsurancePlace);
		}

		Double baseWageRates = (Double)attributes.get("baseWageRates");

		if (baseWageRates != null) {
			setBaseWageRates(baseWageRates);
		}

		Double positionWageRates = (Double)attributes.get("positionWageRates");

		if (positionWageRates != null) {
			setPositionWageRates(positionWageRates);
		}

		Double capacitySalary = (Double)attributes.get("capacitySalary");

		if (capacitySalary != null) {
			setCapacitySalary(capacitySalary);
		}

		Double totalSalary = (Double)attributes.get("totalSalary");

		if (totalSalary != null) {
			setTotalSalary(totalSalary);
		}

		Double bonus = (Double)attributes.get("bonus");

		if (bonus != null) {
			setBonus(bonus);
		}

		Date resignedDate = (Date)attributes.get("resignedDate");

		if (resignedDate != null) {
			setResignedDate(resignedDate);
		}

		Long empUserId = (Long)attributes.get("empUserId");

		if (empUserId != null) {
			setEmpUserId(empUserId);
		}

		Boolean deleted = (Boolean)attributes.get("deleted");

		if (deleted != null) {
			setDeleted(deleted);
		}

		String companyEmailAddress = (String)attributes.get(
				"companyEmailAddress");

		if (companyEmailAddress != null) {
			setCompanyEmailAddress(companyEmailAddress);
		}

		Long workingPlaceId = (Long)attributes.get("workingPlaceId");

		if (workingPlaceId != null) {
			setWorkingPlaceId(workingPlaceId);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long unitId = (Long)attributes.get("unitId");

		if (unitId != null) {
			setUnitId(unitId);
		}

		Long unitGroupId = (Long)attributes.get("unitGroupId");

		if (unitGroupId != null) {
			setUnitGroupId(unitGroupId);
		}

		Long departmentId = (Long)attributes.get("departmentId");

		if (departmentId != null) {
			setDepartmentId(departmentId);
		}
	}

	@JSON
	@Override
	public long getEmpId() {
		return _empId;
	}

	@Override
	public void setEmpId(long empId) {
		_empId = empId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public String getEmpCode() {
		if (_empCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _empCode;
		}
	}

	@Override
	public void setEmpCode(String empCode) {
		_columnBitmask |= EMPCODE_COLUMN_BITMASK;

		if (_originalEmpCode == null) {
			_originalEmpCode = _empCode;
		}

		_empCode = empCode;
	}

	public String getOriginalEmpCode() {
		return GetterUtil.getString(_originalEmpCode);
	}

	@JSON
	@Override
	public String getContactNumber() {
		if (_contactNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _contactNumber;
		}
	}

	@Override
	public void setContactNumber(String contactNumber) {
		_contactNumber = contactNumber;
	}

	@JSON
	@Override
	public String getExtNumber() {
		if (_extNumber == null) {
			return StringPool.BLANK;
		}
		else {
			return _extNumber;
		}
	}

	@Override
	public void setExtNumber(String extNumber) {
		_extNumber = extNumber;
	}

	@JSON
	@Override
	public Date getBirthday() {
		return _birthday;
	}

	@Override
	public void setBirthday(Date birthday) {
		_birthday = birthday;
	}

	@JSON
	@Override
	public String getEthnic() {
		if (_ethnic == null) {
			return StringPool.BLANK;
		}
		else {
			return _ethnic;
		}
	}

	@Override
	public void setEthnic(String ethnic) {
		_ethnic = ethnic;
	}

	@JSON
	@Override
	public String getNationality() {
		if (_nationality == null) {
			return StringPool.BLANK;
		}
		else {
			return _nationality;
		}
	}

	@Override
	public void setNationality(String nationality) {
		_nationality = nationality;
	}

	@JSON
	@Override
	public String getReligion() {
		if (_religion == null) {
			return StringPool.BLANK;
		}
		else {
			return _religion;
		}
	}

	@Override
	public void setReligion(String religion) {
		_religion = religion;
	}

	@JSON
	@Override
	public Date getJoinedDate() {
		return _joinedDate;
	}

	@Override
	public void setJoinedDate(Date joinedDate) {
		_joinedDate = joinedDate;
	}

	@JSON
	@Override
	public long getTitlesId() {
		return _titlesId;
	}

	@Override
	public void setTitlesId(long titlesId) {
		_columnBitmask |= TITLESID_COLUMN_BITMASK;

		if (!_setOriginalTitlesId) {
			_setOriginalTitlesId = true;

			_originalTitlesId = _titlesId;
		}

		_titlesId = titlesId;
	}

	public long getOriginalTitlesId() {
		return _originalTitlesId;
	}

	@JSON
	@Override
	public long getLevelId() {
		return _levelId;
	}

	@Override
	public void setLevelId(long levelId) {
		_levelId = levelId;
	}

	@JSON
	@Override
	public Date getPromotedDate() {
		return _promotedDate;
	}

	@Override
	public void setPromotedDate(Date promotedDate) {
		_promotedDate = promotedDate;
	}

	@JSON
	@Override
	public Date getLaborContractSignedDate() {
		return _laborContractSignedDate;
	}

	@Override
	public void setLaborContractSignedDate(Date laborContractSignedDate) {
		_laborContractSignedDate = laborContractSignedDate;
	}

	@JSON
	@Override
	public Date getLaborContractExpiredDate() {
		return _laborContractExpiredDate;
	}

	@Override
	public void setLaborContractExpiredDate(Date laborContractExpiredDate) {
		_laborContractExpiredDate = laborContractExpiredDate;
	}

	@JSON
	@Override
	public int getLaborContractSignedTime() {
		return _laborContractSignedTime;
	}

	@Override
	public void setLaborContractSignedTime(int laborContractSignedTime) {
		_laborContractSignedTime = laborContractSignedTime;
	}

	@JSON
	@Override
	public String getLaborContractType() {
		if (_laborContractType == null) {
			return StringPool.BLANK;
		}
		else {
			return _laborContractType;
		}
	}

	@Override
	public void setLaborContractType(String laborContractType) {
		_laborContractType = laborContractType;
	}

	@JSON
	@Override
	public String getGender() {
		if (_gender == null) {
			return StringPool.BLANK;
		}
		else {
			return _gender;
		}
	}

	@Override
	public void setGender(String gender) {
		_gender = gender;
	}

	@JSON
	@Override
	public String getPlaceOfBirth() {
		if (_placeOfBirth == null) {
			return StringPool.BLANK;
		}
		else {
			return _placeOfBirth;
		}
	}

	@Override
	public void setPlaceOfBirth(String placeOfBirth) {
		_placeOfBirth = placeOfBirth;
	}

	@JSON
	@Override
	public String getEducation() {
		if (_education == null) {
			return StringPool.BLANK;
		}
		else {
			return _education;
		}
	}

	@Override
	public void setEducation(String education) {
		_education = education;
	}

	@JSON
	@Override
	public String getEducationSpecialize() {
		if (_educationSpecialize == null) {
			return StringPool.BLANK;
		}
		else {
			return _educationSpecialize;
		}
	}

	@Override
	public void setEducationSpecialize(String educationSpecialize) {
		_educationSpecialize = educationSpecialize;
	}

	@JSON
	@Override
	public long getSpecializeId() {
		return _specializeId;
	}

	@Override
	public void setSpecializeId(long specializeId) {
		_specializeId = specializeId;
	}

	@JSON
	@Override
	public long getUniversityId() {
		return _universityId;
	}

	@Override
	public void setUniversityId(long universityId) {
		_universityId = universityId;
	}

	@JSON
	@Override
	public String getMaritalStatus() {
		if (_maritalStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _maritalStatus;
		}
	}

	@Override
	public void setMaritalStatus(String maritalStatus) {
		_maritalStatus = maritalStatus;
	}

	@JSON
	@Override
	public String getIdentityCardNo() {
		if (_identityCardNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _identityCardNo;
		}
	}

	@Override
	public void setIdentityCardNo(String identityCardNo) {
		_identityCardNo = identityCardNo;
	}

	@JSON
	@Override
	public Date getIssuedDate() {
		return _issuedDate;
	}

	@Override
	public void setIssuedDate(Date issuedDate) {
		_issuedDate = issuedDate;
	}

	@JSON
	@Override
	public String getIssuedPlace() {
		if (_issuedPlace == null) {
			return StringPool.BLANK;
		}
		else {
			return _issuedPlace;
		}
	}

	@Override
	public void setIssuedPlace(String issuedPlace) {
		_issuedPlace = issuedPlace;
	}

	@JSON
	@Override
	public String getPassport() {
		if (_passport == null) {
			return StringPool.BLANK;
		}
		else {
			return _passport;
		}
	}

	@Override
	public void setPassport(String passport) {
		_passport = passport;
	}

	@JSON
	@Override
	public long getAddressId() {
		return _addressId;
	}

	@Override
	public void setAddressId(long addressId) {
		_addressId = addressId;
	}

	@JSON
	@Override
	public String getCompanyEmail() {
		if (_companyEmail == null) {
			return StringPool.BLANK;
		}
		else {
			return _companyEmail;
		}
	}

	@Override
	public void setCompanyEmail(String companyEmail) {
		_companyEmail = companyEmail;
	}

	@JSON
	@Override
	public String getPersonalTaxCode() {
		if (_personalTaxCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _personalTaxCode;
		}
	}

	@Override
	public void setPersonalTaxCode(String personalTaxCode) {
		_personalTaxCode = personalTaxCode;
	}

	@JSON
	@Override
	public int getNumberOfDependents() {
		return _numberOfDependents;
	}

	@Override
	public void setNumberOfDependents(int numberOfDependents) {
		_numberOfDependents = numberOfDependents;
	}

	@JSON
	@Override
	public String getDependentNames() {
		if (_dependentNames == null) {
			return StringPool.BLANK;
		}
		else {
			return _dependentNames;
		}
	}

	@Override
	public void setDependentNames(String dependentNames) {
		_dependentNames = dependentNames;
	}

	@JSON
	@Override
	public String getSocialInsuranceNo() {
		if (_socialInsuranceNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _socialInsuranceNo;
		}
	}

	@Override
	public void setSocialInsuranceNo(String socialInsuranceNo) {
		_socialInsuranceNo = socialInsuranceNo;
	}

	@JSON
	@Override
	public String getHealthInsuranceNo() {
		if (_healthInsuranceNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _healthInsuranceNo;
		}
	}

	@Override
	public void setHealthInsuranceNo(String healthInsuranceNo) {
		_healthInsuranceNo = healthInsuranceNo;
	}

	@JSON
	@Override
	public String getHealthInsurancePlace() {
		if (_healthInsurancePlace == null) {
			return StringPool.BLANK;
		}
		else {
			return _healthInsurancePlace;
		}
	}

	@Override
	public void setHealthInsurancePlace(String healthInsurancePlace) {
		_healthInsurancePlace = healthInsurancePlace;
	}

	@JSON
	@Override
	public double getBaseWageRates() {
		return _baseWageRates;
	}

	@Override
	public void setBaseWageRates(double baseWageRates) {
		_baseWageRates = baseWageRates;
	}

	@JSON
	@Override
	public double getPositionWageRates() {
		return _positionWageRates;
	}

	@Override
	public void setPositionWageRates(double positionWageRates) {
		_positionWageRates = positionWageRates;
	}

	@JSON
	@Override
	public double getCapacitySalary() {
		return _capacitySalary;
	}

	@Override
	public void setCapacitySalary(double capacitySalary) {
		_capacitySalary = capacitySalary;
	}

	@JSON
	@Override
	public double getTotalSalary() {
		return _totalSalary;
	}

	@Override
	public void setTotalSalary(double totalSalary) {
		_totalSalary = totalSalary;
	}

	@JSON
	@Override
	public double getBonus() {
		return _bonus;
	}

	@Override
	public void setBonus(double bonus) {
		_bonus = bonus;
	}

	@JSON
	@Override
	public Date getResignedDate() {
		return _resignedDate;
	}

	@Override
	public void setResignedDate(Date resignedDate) {
		_resignedDate = resignedDate;
	}

	@JSON
	@Override
	public long getEmpUserId() {
		return _empUserId;
	}

	@Override
	public void setEmpUserId(long empUserId) {
		_columnBitmask |= EMPUSERID_COLUMN_BITMASK;

		if (!_setOriginalEmpUserId) {
			_setOriginalEmpUserId = true;

			_originalEmpUserId = _empUserId;
		}

		_empUserId = empUserId;
	}

	@Override
	public String getEmpUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getEmpUserId(), "uuid", _empUserUuid);
	}

	@Override
	public void setEmpUserUuid(String empUserUuid) {
		_empUserUuid = empUserUuid;
	}

	public long getOriginalEmpUserId() {
		return _originalEmpUserId;
	}

	@JSON
	@Override
	public boolean getDeleted() {
		return _deleted;
	}

	@Override
	public boolean isDeleted() {
		return _deleted;
	}

	@Override
	public void setDeleted(boolean deleted) {
		_deleted = deleted;
	}

	@JSON
	@Override
	public String getCompanyEmailAddress() {
		if (_companyEmailAddress == null) {
			return StringPool.BLANK;
		}
		else {
			return _companyEmailAddress;
		}
	}

	@Override
	public void setCompanyEmailAddress(String companyEmailAddress) {
		_companyEmailAddress = companyEmailAddress;
	}

	@JSON
	@Override
	public long getWorkingPlaceId() {
		return _workingPlaceId;
	}

	@Override
	public void setWorkingPlaceId(long workingPlaceId) {
		_workingPlaceId = workingPlaceId;
	}

	@JSON
	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (_originalStatus == null) {
			_originalStatus = _status;
		}

		_status = status;
	}

	public String getOriginalStatus() {
		return GetterUtil.getString(_originalStatus);
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public long getUnitId() {
		return _unitId;
	}

	@Override
	public void setUnitId(long unitId) {
		_unitId = unitId;
	}

	@JSON
	@Override
	public long getUnitGroupId() {
		return _unitGroupId;
	}

	@Override
	public void setUnitGroupId(long unitGroupId) {
		_unitGroupId = unitGroupId;
	}

	@JSON
	@Override
	public long getDepartmentId() {
		return _departmentId;
	}

	@Override
	public void setDepartmentId(long departmentId) {
		_departmentId = departmentId;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Emp.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Emp toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Emp)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmpImpl empImpl = new EmpImpl();

		empImpl.setEmpId(getEmpId());
		empImpl.setGroupId(getGroupId());
		empImpl.setEmpCode(getEmpCode());
		empImpl.setContactNumber(getContactNumber());
		empImpl.setExtNumber(getExtNumber());
		empImpl.setBirthday(getBirthday());
		empImpl.setEthnic(getEthnic());
		empImpl.setNationality(getNationality());
		empImpl.setReligion(getReligion());
		empImpl.setJoinedDate(getJoinedDate());
		empImpl.setTitlesId(getTitlesId());
		empImpl.setLevelId(getLevelId());
		empImpl.setPromotedDate(getPromotedDate());
		empImpl.setLaborContractSignedDate(getLaborContractSignedDate());
		empImpl.setLaborContractExpiredDate(getLaborContractExpiredDate());
		empImpl.setLaborContractSignedTime(getLaborContractSignedTime());
		empImpl.setLaborContractType(getLaborContractType());
		empImpl.setGender(getGender());
		empImpl.setPlaceOfBirth(getPlaceOfBirth());
		empImpl.setEducation(getEducation());
		empImpl.setEducationSpecialize(getEducationSpecialize());
		empImpl.setSpecializeId(getSpecializeId());
		empImpl.setUniversityId(getUniversityId());
		empImpl.setMaritalStatus(getMaritalStatus());
		empImpl.setIdentityCardNo(getIdentityCardNo());
		empImpl.setIssuedDate(getIssuedDate());
		empImpl.setIssuedPlace(getIssuedPlace());
		empImpl.setPassport(getPassport());
		empImpl.setAddressId(getAddressId());
		empImpl.setCompanyEmail(getCompanyEmail());
		empImpl.setPersonalTaxCode(getPersonalTaxCode());
		empImpl.setNumberOfDependents(getNumberOfDependents());
		empImpl.setDependentNames(getDependentNames());
		empImpl.setSocialInsuranceNo(getSocialInsuranceNo());
		empImpl.setHealthInsuranceNo(getHealthInsuranceNo());
		empImpl.setHealthInsurancePlace(getHealthInsurancePlace());
		empImpl.setBaseWageRates(getBaseWageRates());
		empImpl.setPositionWageRates(getPositionWageRates());
		empImpl.setCapacitySalary(getCapacitySalary());
		empImpl.setTotalSalary(getTotalSalary());
		empImpl.setBonus(getBonus());
		empImpl.setResignedDate(getResignedDate());
		empImpl.setEmpUserId(getEmpUserId());
		empImpl.setDeleted(getDeleted());
		empImpl.setCompanyEmailAddress(getCompanyEmailAddress());
		empImpl.setWorkingPlaceId(getWorkingPlaceId());
		empImpl.setStatus(getStatus());
		empImpl.setCompanyId(getCompanyId());
		empImpl.setUserId(getUserId());
		empImpl.setUserName(getUserName());
		empImpl.setCreateDate(getCreateDate());
		empImpl.setModifiedDate(getModifiedDate());
		empImpl.setUnitId(getUnitId());
		empImpl.setUnitGroupId(getUnitGroupId());
		empImpl.setDepartmentId(getDepartmentId());

		empImpl.resetOriginalValues();

		return empImpl;
	}

	@Override
	public int compareTo(Emp emp) {
		long primaryKey = emp.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Emp)) {
			return false;
		}

		Emp emp = (Emp)obj;

		long primaryKey = emp.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EmpModelImpl empModelImpl = this;

		empModelImpl._originalEmpCode = empModelImpl._empCode;

		empModelImpl._originalTitlesId = empModelImpl._titlesId;

		empModelImpl._setOriginalTitlesId = false;

		empModelImpl._originalEmpUserId = empModelImpl._empUserId;

		empModelImpl._setOriginalEmpUserId = false;

		empModelImpl._originalStatus = empModelImpl._status;

		empModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Emp> toCacheModel() {
		EmpCacheModel empCacheModel = new EmpCacheModel();

		empCacheModel.empId = getEmpId();

		empCacheModel.groupId = getGroupId();

		empCacheModel.empCode = getEmpCode();

		String empCode = empCacheModel.empCode;

		if ((empCode != null) && (empCode.length() == 0)) {
			empCacheModel.empCode = null;
		}

		empCacheModel.contactNumber = getContactNumber();

		String contactNumber = empCacheModel.contactNumber;

		if ((contactNumber != null) && (contactNumber.length() == 0)) {
			empCacheModel.contactNumber = null;
		}

		empCacheModel.extNumber = getExtNumber();

		String extNumber = empCacheModel.extNumber;

		if ((extNumber != null) && (extNumber.length() == 0)) {
			empCacheModel.extNumber = null;
		}

		Date birthday = getBirthday();

		if (birthday != null) {
			empCacheModel.birthday = birthday.getTime();
		}
		else {
			empCacheModel.birthday = Long.MIN_VALUE;
		}

		empCacheModel.ethnic = getEthnic();

		String ethnic = empCacheModel.ethnic;

		if ((ethnic != null) && (ethnic.length() == 0)) {
			empCacheModel.ethnic = null;
		}

		empCacheModel.nationality = getNationality();

		String nationality = empCacheModel.nationality;

		if ((nationality != null) && (nationality.length() == 0)) {
			empCacheModel.nationality = null;
		}

		empCacheModel.religion = getReligion();

		String religion = empCacheModel.religion;

		if ((religion != null) && (religion.length() == 0)) {
			empCacheModel.religion = null;
		}

		Date joinedDate = getJoinedDate();

		if (joinedDate != null) {
			empCacheModel.joinedDate = joinedDate.getTime();
		}
		else {
			empCacheModel.joinedDate = Long.MIN_VALUE;
		}

		empCacheModel.titlesId = getTitlesId();

		empCacheModel.levelId = getLevelId();

		Date promotedDate = getPromotedDate();

		if (promotedDate != null) {
			empCacheModel.promotedDate = promotedDate.getTime();
		}
		else {
			empCacheModel.promotedDate = Long.MIN_VALUE;
		}

		Date laborContractSignedDate = getLaborContractSignedDate();

		if (laborContractSignedDate != null) {
			empCacheModel.laborContractSignedDate = laborContractSignedDate.getTime();
		}
		else {
			empCacheModel.laborContractSignedDate = Long.MIN_VALUE;
		}

		Date laborContractExpiredDate = getLaborContractExpiredDate();

		if (laborContractExpiredDate != null) {
			empCacheModel.laborContractExpiredDate = laborContractExpiredDate.getTime();
		}
		else {
			empCacheModel.laborContractExpiredDate = Long.MIN_VALUE;
		}

		empCacheModel.laborContractSignedTime = getLaborContractSignedTime();

		empCacheModel.laborContractType = getLaborContractType();

		String laborContractType = empCacheModel.laborContractType;

		if ((laborContractType != null) && (laborContractType.length() == 0)) {
			empCacheModel.laborContractType = null;
		}

		empCacheModel.gender = getGender();

		String gender = empCacheModel.gender;

		if ((gender != null) && (gender.length() == 0)) {
			empCacheModel.gender = null;
		}

		empCacheModel.placeOfBirth = getPlaceOfBirth();

		String placeOfBirth = empCacheModel.placeOfBirth;

		if ((placeOfBirth != null) && (placeOfBirth.length() == 0)) {
			empCacheModel.placeOfBirth = null;
		}

		empCacheModel.education = getEducation();

		String education = empCacheModel.education;

		if ((education != null) && (education.length() == 0)) {
			empCacheModel.education = null;
		}

		empCacheModel.educationSpecialize = getEducationSpecialize();

		String educationSpecialize = empCacheModel.educationSpecialize;

		if ((educationSpecialize != null) &&
				(educationSpecialize.length() == 0)) {
			empCacheModel.educationSpecialize = null;
		}

		empCacheModel.specializeId = getSpecializeId();

		empCacheModel.universityId = getUniversityId();

		empCacheModel.maritalStatus = getMaritalStatus();

		String maritalStatus = empCacheModel.maritalStatus;

		if ((maritalStatus != null) && (maritalStatus.length() == 0)) {
			empCacheModel.maritalStatus = null;
		}

		empCacheModel.identityCardNo = getIdentityCardNo();

		String identityCardNo = empCacheModel.identityCardNo;

		if ((identityCardNo != null) && (identityCardNo.length() == 0)) {
			empCacheModel.identityCardNo = null;
		}

		Date issuedDate = getIssuedDate();

		if (issuedDate != null) {
			empCacheModel.issuedDate = issuedDate.getTime();
		}
		else {
			empCacheModel.issuedDate = Long.MIN_VALUE;
		}

		empCacheModel.issuedPlace = getIssuedPlace();

		String issuedPlace = empCacheModel.issuedPlace;

		if ((issuedPlace != null) && (issuedPlace.length() == 0)) {
			empCacheModel.issuedPlace = null;
		}

		empCacheModel.passport = getPassport();

		String passport = empCacheModel.passport;

		if ((passport != null) && (passport.length() == 0)) {
			empCacheModel.passport = null;
		}

		empCacheModel.addressId = getAddressId();

		empCacheModel.companyEmail = getCompanyEmail();

		String companyEmail = empCacheModel.companyEmail;

		if ((companyEmail != null) && (companyEmail.length() == 0)) {
			empCacheModel.companyEmail = null;
		}

		empCacheModel.personalTaxCode = getPersonalTaxCode();

		String personalTaxCode = empCacheModel.personalTaxCode;

		if ((personalTaxCode != null) && (personalTaxCode.length() == 0)) {
			empCacheModel.personalTaxCode = null;
		}

		empCacheModel.numberOfDependents = getNumberOfDependents();

		empCacheModel.dependentNames = getDependentNames();

		String dependentNames = empCacheModel.dependentNames;

		if ((dependentNames != null) && (dependentNames.length() == 0)) {
			empCacheModel.dependentNames = null;
		}

		empCacheModel.socialInsuranceNo = getSocialInsuranceNo();

		String socialInsuranceNo = empCacheModel.socialInsuranceNo;

		if ((socialInsuranceNo != null) && (socialInsuranceNo.length() == 0)) {
			empCacheModel.socialInsuranceNo = null;
		}

		empCacheModel.healthInsuranceNo = getHealthInsuranceNo();

		String healthInsuranceNo = empCacheModel.healthInsuranceNo;

		if ((healthInsuranceNo != null) && (healthInsuranceNo.length() == 0)) {
			empCacheModel.healthInsuranceNo = null;
		}

		empCacheModel.healthInsurancePlace = getHealthInsurancePlace();

		String healthInsurancePlace = empCacheModel.healthInsurancePlace;

		if ((healthInsurancePlace != null) &&
				(healthInsurancePlace.length() == 0)) {
			empCacheModel.healthInsurancePlace = null;
		}

		empCacheModel.baseWageRates = getBaseWageRates();

		empCacheModel.positionWageRates = getPositionWageRates();

		empCacheModel.capacitySalary = getCapacitySalary();

		empCacheModel.totalSalary = getTotalSalary();

		empCacheModel.bonus = getBonus();

		Date resignedDate = getResignedDate();

		if (resignedDate != null) {
			empCacheModel.resignedDate = resignedDate.getTime();
		}
		else {
			empCacheModel.resignedDate = Long.MIN_VALUE;
		}

		empCacheModel.empUserId = getEmpUserId();

		empCacheModel.deleted = getDeleted();

		empCacheModel.companyEmailAddress = getCompanyEmailAddress();

		String companyEmailAddress = empCacheModel.companyEmailAddress;

		if ((companyEmailAddress != null) &&
				(companyEmailAddress.length() == 0)) {
			empCacheModel.companyEmailAddress = null;
		}

		empCacheModel.workingPlaceId = getWorkingPlaceId();

		empCacheModel.status = getStatus();

		String status = empCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			empCacheModel.status = null;
		}

		empCacheModel.companyId = getCompanyId();

		empCacheModel.userId = getUserId();

		empCacheModel.userName = getUserName();

		String userName = empCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			empCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			empCacheModel.createDate = createDate.getTime();
		}
		else {
			empCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			empCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			empCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		empCacheModel.unitId = getUnitId();

		empCacheModel.unitGroupId = getUnitGroupId();

		empCacheModel.departmentId = getDepartmentId();

		return empCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(111);

		sb.append("{empId=");
		sb.append(getEmpId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", empCode=");
		sb.append(getEmpCode());
		sb.append(", contactNumber=");
		sb.append(getContactNumber());
		sb.append(", extNumber=");
		sb.append(getExtNumber());
		sb.append(", birthday=");
		sb.append(getBirthday());
		sb.append(", ethnic=");
		sb.append(getEthnic());
		sb.append(", nationality=");
		sb.append(getNationality());
		sb.append(", religion=");
		sb.append(getReligion());
		sb.append(", joinedDate=");
		sb.append(getJoinedDate());
		sb.append(", titlesId=");
		sb.append(getTitlesId());
		sb.append(", levelId=");
		sb.append(getLevelId());
		sb.append(", promotedDate=");
		sb.append(getPromotedDate());
		sb.append(", laborContractSignedDate=");
		sb.append(getLaborContractSignedDate());
		sb.append(", laborContractExpiredDate=");
		sb.append(getLaborContractExpiredDate());
		sb.append(", laborContractSignedTime=");
		sb.append(getLaborContractSignedTime());
		sb.append(", laborContractType=");
		sb.append(getLaborContractType());
		sb.append(", gender=");
		sb.append(getGender());
		sb.append(", placeOfBirth=");
		sb.append(getPlaceOfBirth());
		sb.append(", education=");
		sb.append(getEducation());
		sb.append(", educationSpecialize=");
		sb.append(getEducationSpecialize());
		sb.append(", specializeId=");
		sb.append(getSpecializeId());
		sb.append(", universityId=");
		sb.append(getUniversityId());
		sb.append(", maritalStatus=");
		sb.append(getMaritalStatus());
		sb.append(", identityCardNo=");
		sb.append(getIdentityCardNo());
		sb.append(", issuedDate=");
		sb.append(getIssuedDate());
		sb.append(", issuedPlace=");
		sb.append(getIssuedPlace());
		sb.append(", passport=");
		sb.append(getPassport());
		sb.append(", addressId=");
		sb.append(getAddressId());
		sb.append(", companyEmail=");
		sb.append(getCompanyEmail());
		sb.append(", personalTaxCode=");
		sb.append(getPersonalTaxCode());
		sb.append(", numberOfDependents=");
		sb.append(getNumberOfDependents());
		sb.append(", dependentNames=");
		sb.append(getDependentNames());
		sb.append(", socialInsuranceNo=");
		sb.append(getSocialInsuranceNo());
		sb.append(", healthInsuranceNo=");
		sb.append(getHealthInsuranceNo());
		sb.append(", healthInsurancePlace=");
		sb.append(getHealthInsurancePlace());
		sb.append(", baseWageRates=");
		sb.append(getBaseWageRates());
		sb.append(", positionWageRates=");
		sb.append(getPositionWageRates());
		sb.append(", capacitySalary=");
		sb.append(getCapacitySalary());
		sb.append(", totalSalary=");
		sb.append(getTotalSalary());
		sb.append(", bonus=");
		sb.append(getBonus());
		sb.append(", resignedDate=");
		sb.append(getResignedDate());
		sb.append(", empUserId=");
		sb.append(getEmpUserId());
		sb.append(", deleted=");
		sb.append(getDeleted());
		sb.append(", companyEmailAddress=");
		sb.append(getCompanyEmailAddress());
		sb.append(", workingPlaceId=");
		sb.append(getWorkingPlaceId());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", unitId=");
		sb.append(getUnitId());
		sb.append(", unitGroupId=");
		sb.append(getUnitGroupId());
		sb.append(", departmentId=");
		sb.append(getDepartmentId());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(169);

		sb.append("<model><model-name>");
		sb.append("vn.com.ecopharma.emp.model.Emp");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>empId</column-name><column-value><![CDATA[");
		sb.append(getEmpId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>empCode</column-name><column-value><![CDATA[");
		sb.append(getEmpCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contactNumber</column-name><column-value><![CDATA[");
		sb.append(getContactNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>extNumber</column-name><column-value><![CDATA[");
		sb.append(getExtNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>birthday</column-name><column-value><![CDATA[");
		sb.append(getBirthday());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ethnic</column-name><column-value><![CDATA[");
		sb.append(getEthnic());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>nationality</column-name><column-value><![CDATA[");
		sb.append(getNationality());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>religion</column-name><column-value><![CDATA[");
		sb.append(getReligion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>joinedDate</column-name><column-value><![CDATA[");
		sb.append(getJoinedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>titlesId</column-name><column-value><![CDATA[");
		sb.append(getTitlesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>levelId</column-name><column-value><![CDATA[");
		sb.append(getLevelId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>promotedDate</column-name><column-value><![CDATA[");
		sb.append(getPromotedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>laborContractSignedDate</column-name><column-value><![CDATA[");
		sb.append(getLaborContractSignedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>laborContractExpiredDate</column-name><column-value><![CDATA[");
		sb.append(getLaborContractExpiredDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>laborContractSignedTime</column-name><column-value><![CDATA[");
		sb.append(getLaborContractSignedTime());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>laborContractType</column-name><column-value><![CDATA[");
		sb.append(getLaborContractType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gender</column-name><column-value><![CDATA[");
		sb.append(getGender());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>placeOfBirth</column-name><column-value><![CDATA[");
		sb.append(getPlaceOfBirth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>education</column-name><column-value><![CDATA[");
		sb.append(getEducation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>educationSpecialize</column-name><column-value><![CDATA[");
		sb.append(getEducationSpecialize());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>specializeId</column-name><column-value><![CDATA[");
		sb.append(getSpecializeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>universityId</column-name><column-value><![CDATA[");
		sb.append(getUniversityId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maritalStatus</column-name><column-value><![CDATA[");
		sb.append(getMaritalStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>identityCardNo</column-name><column-value><![CDATA[");
		sb.append(getIdentityCardNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>issuedDate</column-name><column-value><![CDATA[");
		sb.append(getIssuedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>issuedPlace</column-name><column-value><![CDATA[");
		sb.append(getIssuedPlace());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>passport</column-name><column-value><![CDATA[");
		sb.append(getPassport());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addressId</column-name><column-value><![CDATA[");
		sb.append(getAddressId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyEmail</column-name><column-value><![CDATA[");
		sb.append(getCompanyEmail());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>personalTaxCode</column-name><column-value><![CDATA[");
		sb.append(getPersonalTaxCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>numberOfDependents</column-name><column-value><![CDATA[");
		sb.append(getNumberOfDependents());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dependentNames</column-name><column-value><![CDATA[");
		sb.append(getDependentNames());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>socialInsuranceNo</column-name><column-value><![CDATA[");
		sb.append(getSocialInsuranceNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>healthInsuranceNo</column-name><column-value><![CDATA[");
		sb.append(getHealthInsuranceNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>healthInsurancePlace</column-name><column-value><![CDATA[");
		sb.append(getHealthInsurancePlace());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>baseWageRates</column-name><column-value><![CDATA[");
		sb.append(getBaseWageRates());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>positionWageRates</column-name><column-value><![CDATA[");
		sb.append(getPositionWageRates());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>capacitySalary</column-name><column-value><![CDATA[");
		sb.append(getCapacitySalary());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>totalSalary</column-name><column-value><![CDATA[");
		sb.append(getTotalSalary());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bonus</column-name><column-value><![CDATA[");
		sb.append(getBonus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>resignedDate</column-name><column-value><![CDATA[");
		sb.append(getResignedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>empUserId</column-name><column-value><![CDATA[");
		sb.append(getEmpUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>deleted</column-name><column-value><![CDATA[");
		sb.append(getDeleted());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyEmailAddress</column-name><column-value><![CDATA[");
		sb.append(getCompanyEmailAddress());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workingPlaceId</column-name><column-value><![CDATA[");
		sb.append(getWorkingPlaceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>unitId</column-name><column-value><![CDATA[");
		sb.append(getUnitId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>unitGroupId</column-name><column-value><![CDATA[");
		sb.append(getUnitGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>departmentId</column-name><column-value><![CDATA[");
		sb.append(getDepartmentId());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Emp.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] { Emp.class };
	private long _empId;
	private long _groupId;
	private String _empCode;
	private String _originalEmpCode;
	private String _contactNumber;
	private String _extNumber;
	private Date _birthday;
	private String _ethnic;
	private String _nationality;
	private String _religion;
	private Date _joinedDate;
	private long _titlesId;
	private long _originalTitlesId;
	private boolean _setOriginalTitlesId;
	private long _levelId;
	private Date _promotedDate;
	private Date _laborContractSignedDate;
	private Date _laborContractExpiredDate;
	private int _laborContractSignedTime;
	private String _laborContractType;
	private String _gender;
	private String _placeOfBirth;
	private String _education;
	private String _educationSpecialize;
	private long _specializeId;
	private long _universityId;
	private String _maritalStatus;
	private String _identityCardNo;
	private Date _issuedDate;
	private String _issuedPlace;
	private String _passport;
	private long _addressId;
	private String _companyEmail;
	private String _personalTaxCode;
	private int _numberOfDependents;
	private String _dependentNames;
	private String _socialInsuranceNo;
	private String _healthInsuranceNo;
	private String _healthInsurancePlace;
	private double _baseWageRates;
	private double _positionWageRates;
	private double _capacitySalary;
	private double _totalSalary;
	private double _bonus;
	private Date _resignedDate;
	private long _empUserId;
	private String _empUserUuid;
	private long _originalEmpUserId;
	private boolean _setOriginalEmpUserId;
	private boolean _deleted;
	private String _companyEmailAddress;
	private long _workingPlaceId;
	private String _status;
	private String _originalStatus;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _unitId;
	private long _unitGroupId;
	private long _departmentId;
	private long _columnBitmask;
	private Emp _escapedModel;
}