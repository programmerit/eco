/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.com.ecopharma.emp.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.com.ecopharma.emp.model.Specialized;
import vn.com.ecopharma.emp.model.SpecializedModel;
import vn.com.ecopharma.emp.model.SpecializedSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the Specialized service. Represents a row in the &quot;eco_em_portlet_Specialized&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.com.ecopharma.emp.model.SpecializedModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SpecializedImpl}.
 * </p>
 *
 * @author tvt
 * @see SpecializedImpl
 * @see vn.com.ecopharma.emp.model.Specialized
 * @see vn.com.ecopharma.emp.model.SpecializedModel
 * @generated
 */
@JSON(strict = true)
public class SpecializedModelImpl extends BaseModelImpl<Specialized>
	implements SpecializedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a specialized model instance should use the {@link vn.com.ecopharma.emp.model.Specialized} interface instead.
	 */
	public static final String TABLE_NAME = "eco_em_portlet_Specialized";
	public static final Object[][] TABLE_COLUMNS = {
			{ "specializedId", Types.BIGINT },
			{ "specializedCode", Types.VARCHAR },
			{ "name", Types.VARCHAR },
			{ "level", Types.INTEGER },
			{ "parentId", Types.BIGINT },
			{ "university", Types.BOOLEAN },
			{ "college", Types.BOOLEAN },
			{ "vocationalCollege", Types.BOOLEAN },
			{ "vocational", Types.BOOLEAN },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table eco_em_portlet_Specialized (specializedId LONG not null primary key,specializedCode VARCHAR(75) null,name VARCHAR(256) null,level INTEGER,parentId LONG,university BOOLEAN,college BOOLEAN,vocationalCollege BOOLEAN,vocational BOOLEAN,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table eco_em_portlet_Specialized";
	public static final String ORDER_BY_JPQL = " ORDER BY specialized.specializedId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY eco_em_portlet_Specialized.specializedId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.com.ecopharma.emp.model.Specialized"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.com.ecopharma.emp.model.Specialized"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.com.ecopharma.emp.model.Specialized"),
			true);
	public static long LEVEL_COLUMN_BITMASK = 1L;
	public static long NAME_COLUMN_BITMASK = 2L;
	public static long PARENTID_COLUMN_BITMASK = 4L;
	public static long SPECIALIZEDID_COLUMN_BITMASK = 8L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static Specialized toModel(SpecializedSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		Specialized model = new SpecializedImpl();

		model.setSpecializedId(soapModel.getSpecializedId());
		model.setSpecializedCode(soapModel.getSpecializedCode());
		model.setName(soapModel.getName());
		model.setLevel(soapModel.getLevel());
		model.setParentId(soapModel.getParentId());
		model.setUniversity(soapModel.getUniversity());
		model.setCollege(soapModel.getCollege());
		model.setVocationalCollege(soapModel.getVocationalCollege());
		model.setVocational(soapModel.getVocational());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<Specialized> toModels(SpecializedSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<Specialized> models = new ArrayList<Specialized>(soapModels.length);

		for (SpecializedSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.com.ecopharma.emp.model.Specialized"));

	public SpecializedModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _specializedId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setSpecializedId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _specializedId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return Specialized.class;
	}

	@Override
	public String getModelClassName() {
		return Specialized.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("specializedId", getSpecializedId());
		attributes.put("specializedCode", getSpecializedCode());
		attributes.put("name", getName());
		attributes.put("level", getLevel());
		attributes.put("parentId", getParentId());
		attributes.put("university", getUniversity());
		attributes.put("college", getCollege());
		attributes.put("vocationalCollege", getVocationalCollege());
		attributes.put("vocational", getVocational());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long specializedId = (Long)attributes.get("specializedId");

		if (specializedId != null) {
			setSpecializedId(specializedId);
		}

		String specializedCode = (String)attributes.get("specializedCode");

		if (specializedCode != null) {
			setSpecializedCode(specializedCode);
		}

		String name = (String)attributes.get("name");

		if (name != null) {
			setName(name);
		}

		Integer level = (Integer)attributes.get("level");

		if (level != null) {
			setLevel(level);
		}

		Long parentId = (Long)attributes.get("parentId");

		if (parentId != null) {
			setParentId(parentId);
		}

		Boolean university = (Boolean)attributes.get("university");

		if (university != null) {
			setUniversity(university);
		}

		Boolean college = (Boolean)attributes.get("college");

		if (college != null) {
			setCollege(college);
		}

		Boolean vocationalCollege = (Boolean)attributes.get("vocationalCollege");

		if (vocationalCollege != null) {
			setVocationalCollege(vocationalCollege);
		}

		Boolean vocational = (Boolean)attributes.get("vocational");

		if (vocational != null) {
			setVocational(vocational);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public long getSpecializedId() {
		return _specializedId;
	}

	@Override
	public void setSpecializedId(long specializedId) {
		_specializedId = specializedId;
	}

	@JSON
	@Override
	public String getSpecializedCode() {
		if (_specializedCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _specializedCode;
		}
	}

	@Override
	public void setSpecializedCode(String specializedCode) {
		_specializedCode = specializedCode;
	}

	@JSON
	@Override
	public String getName() {
		if (_name == null) {
			return StringPool.BLANK;
		}
		else {
			return _name;
		}
	}

	@Override
	public void setName(String name) {
		_columnBitmask |= NAME_COLUMN_BITMASK;

		if (_originalName == null) {
			_originalName = _name;
		}

		_name = name;
	}

	public String getOriginalName() {
		return GetterUtil.getString(_originalName);
	}

	@JSON
	@Override
	public int getLevel() {
		return _level;
	}

	@Override
	public void setLevel(int level) {
		_columnBitmask |= LEVEL_COLUMN_BITMASK;

		if (!_setOriginalLevel) {
			_setOriginalLevel = true;

			_originalLevel = _level;
		}

		_level = level;
	}

	public int getOriginalLevel() {
		return _originalLevel;
	}

	@JSON
	@Override
	public long getParentId() {
		return _parentId;
	}

	@Override
	public void setParentId(long parentId) {
		_columnBitmask |= PARENTID_COLUMN_BITMASK;

		if (!_setOriginalParentId) {
			_setOriginalParentId = true;

			_originalParentId = _parentId;
		}

		_parentId = parentId;
	}

	public long getOriginalParentId() {
		return _originalParentId;
	}

	@JSON
	@Override
	public boolean getUniversity() {
		return _university;
	}

	@Override
	public boolean isUniversity() {
		return _university;
	}

	@Override
	public void setUniversity(boolean university) {
		_university = university;
	}

	@JSON
	@Override
	public boolean getCollege() {
		return _college;
	}

	@Override
	public boolean isCollege() {
		return _college;
	}

	@Override
	public void setCollege(boolean college) {
		_college = college;
	}

	@JSON
	@Override
	public boolean getVocationalCollege() {
		return _vocationalCollege;
	}

	@Override
	public boolean isVocationalCollege() {
		return _vocationalCollege;
	}

	@Override
	public void setVocationalCollege(boolean vocationalCollege) {
		_vocationalCollege = vocationalCollege;
	}

	@JSON
	@Override
	public boolean getVocational() {
		return _vocational;
	}

	@Override
	public boolean isVocational() {
		return _vocational;
	}

	@Override
	public void setVocational(boolean vocational) {
		_vocational = vocational;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			Specialized.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public Specialized toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (Specialized)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		SpecializedImpl specializedImpl = new SpecializedImpl();

		specializedImpl.setSpecializedId(getSpecializedId());
		specializedImpl.setSpecializedCode(getSpecializedCode());
		specializedImpl.setName(getName());
		specializedImpl.setLevel(getLevel());
		specializedImpl.setParentId(getParentId());
		specializedImpl.setUniversity(getUniversity());
		specializedImpl.setCollege(getCollege());
		specializedImpl.setVocationalCollege(getVocationalCollege());
		specializedImpl.setVocational(getVocational());
		specializedImpl.setGroupId(getGroupId());
		specializedImpl.setCompanyId(getCompanyId());
		specializedImpl.setUserId(getUserId());
		specializedImpl.setUserName(getUserName());
		specializedImpl.setCreateDate(getCreateDate());
		specializedImpl.setModifiedDate(getModifiedDate());

		specializedImpl.resetOriginalValues();

		return specializedImpl;
	}

	@Override
	public int compareTo(Specialized specialized) {
		long primaryKey = specialized.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof Specialized)) {
			return false;
		}

		Specialized specialized = (Specialized)obj;

		long primaryKey = specialized.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		SpecializedModelImpl specializedModelImpl = this;

		specializedModelImpl._originalName = specializedModelImpl._name;

		specializedModelImpl._originalLevel = specializedModelImpl._level;

		specializedModelImpl._setOriginalLevel = false;

		specializedModelImpl._originalParentId = specializedModelImpl._parentId;

		specializedModelImpl._setOriginalParentId = false;

		specializedModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<Specialized> toCacheModel() {
		SpecializedCacheModel specializedCacheModel = new SpecializedCacheModel();

		specializedCacheModel.specializedId = getSpecializedId();

		specializedCacheModel.specializedCode = getSpecializedCode();

		String specializedCode = specializedCacheModel.specializedCode;

		if ((specializedCode != null) && (specializedCode.length() == 0)) {
			specializedCacheModel.specializedCode = null;
		}

		specializedCacheModel.name = getName();

		String name = specializedCacheModel.name;

		if ((name != null) && (name.length() == 0)) {
			specializedCacheModel.name = null;
		}

		specializedCacheModel.level = getLevel();

		specializedCacheModel.parentId = getParentId();

		specializedCacheModel.university = getUniversity();

		specializedCacheModel.college = getCollege();

		specializedCacheModel.vocationalCollege = getVocationalCollege();

		specializedCacheModel.vocational = getVocational();

		specializedCacheModel.groupId = getGroupId();

		specializedCacheModel.companyId = getCompanyId();

		specializedCacheModel.userId = getUserId();

		specializedCacheModel.userName = getUserName();

		String userName = specializedCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			specializedCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			specializedCacheModel.createDate = createDate.getTime();
		}
		else {
			specializedCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			specializedCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			specializedCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return specializedCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(31);

		sb.append("{specializedId=");
		sb.append(getSpecializedId());
		sb.append(", specializedCode=");
		sb.append(getSpecializedCode());
		sb.append(", name=");
		sb.append(getName());
		sb.append(", level=");
		sb.append(getLevel());
		sb.append(", parentId=");
		sb.append(getParentId());
		sb.append(", university=");
		sb.append(getUniversity());
		sb.append(", college=");
		sb.append(getCollege());
		sb.append(", vocationalCollege=");
		sb.append(getVocationalCollege());
		sb.append(", vocational=");
		sb.append(getVocational());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(49);

		sb.append("<model><model-name>");
		sb.append("vn.com.ecopharma.emp.model.Specialized");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>specializedId</column-name><column-value><![CDATA[");
		sb.append(getSpecializedId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>specializedCode</column-name><column-value><![CDATA[");
		sb.append(getSpecializedCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>name</column-name><column-value><![CDATA[");
		sb.append(getName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>level</column-name><column-value><![CDATA[");
		sb.append(getLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentId</column-name><column-value><![CDATA[");
		sb.append(getParentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>university</column-name><column-value><![CDATA[");
		sb.append(getUniversity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>college</column-name><column-value><![CDATA[");
		sb.append(getCollege());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vocationalCollege</column-name><column-value><![CDATA[");
		sb.append(getVocationalCollege());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>vocational</column-name><column-value><![CDATA[");
		sb.append(getVocational());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = Specialized.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			Specialized.class
		};
	private long _specializedId;
	private String _specializedCode;
	private String _name;
	private String _originalName;
	private int _level;
	private int _originalLevel;
	private boolean _setOriginalLevel;
	private long _parentId;
	private long _originalParentId;
	private boolean _setOriginalParentId;
	private boolean _university;
	private boolean _college;
	private boolean _vocationalCollege;
	private boolean _vocational;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private Specialized _escapedModel;
}