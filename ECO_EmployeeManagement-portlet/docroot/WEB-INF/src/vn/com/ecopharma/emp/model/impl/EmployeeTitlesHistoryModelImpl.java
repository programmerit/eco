/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.com.ecopharma.emp.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.com.ecopharma.emp.model.EmployeeTitlesHistory;
import vn.com.ecopharma.emp.model.EmployeeTitlesHistoryModel;
import vn.com.ecopharma.emp.model.EmployeeTitlesHistorySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the EmployeeTitlesHistory service. Represents a row in the &quot;eco_em_portlet_EmployeeTitlesHistory&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.com.ecopharma.emp.model.EmployeeTitlesHistoryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmployeeTitlesHistoryImpl}.
 * </p>
 *
 * @author tvt
 * @see EmployeeTitlesHistoryImpl
 * @see vn.com.ecopharma.emp.model.EmployeeTitlesHistory
 * @see vn.com.ecopharma.emp.model.EmployeeTitlesHistoryModel
 * @generated
 */
@JSON(strict = true)
public class EmployeeTitlesHistoryModelImpl extends BaseModelImpl<EmployeeTitlesHistory>
	implements EmployeeTitlesHistoryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a employee titles history model instance should use the {@link vn.com.ecopharma.emp.model.EmployeeTitlesHistory} interface instead.
	 */
	public static final String TABLE_NAME = "eco_em_portlet_EmployeeTitlesHistory";
	public static final Object[][] TABLE_COLUMNS = {
			{ "employeeTitlesHistoryId", Types.BIGINT },
			{ "employeeId", Types.BIGINT },
			{ "titlesId", Types.BIGINT },
			{ "setDate", Types.TIMESTAMP },
			{ "note", Types.VARCHAR },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table eco_em_portlet_EmployeeTitlesHistory (employeeTitlesHistoryId LONG not null primary key,employeeId LONG,titlesId LONG,setDate DATE null,note VARCHAR(75) null,groupId LONG,companyId LONG,userId LONG,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table eco_em_portlet_EmployeeTitlesHistory";
	public static final String ORDER_BY_JPQL = " ORDER BY employeeTitlesHistory.employeeTitlesHistoryId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY eco_em_portlet_EmployeeTitlesHistory.employeeTitlesHistoryId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.com.ecopharma.emp.model.EmployeeTitlesHistory"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.com.ecopharma.emp.model.EmployeeTitlesHistory"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static EmployeeTitlesHistory toModel(
		EmployeeTitlesHistorySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		EmployeeTitlesHistory model = new EmployeeTitlesHistoryImpl();

		model.setEmployeeTitlesHistoryId(soapModel.getEmployeeTitlesHistoryId());
		model.setEmployeeId(soapModel.getEmployeeId());
		model.setTitlesId(soapModel.getTitlesId());
		model.setSetDate(soapModel.getSetDate());
		model.setNote(soapModel.getNote());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<EmployeeTitlesHistory> toModels(
		EmployeeTitlesHistorySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<EmployeeTitlesHistory> models = new ArrayList<EmployeeTitlesHistory>(soapModels.length);

		for (EmployeeTitlesHistorySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.com.ecopharma.emp.model.EmployeeTitlesHistory"));

	public EmployeeTitlesHistoryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _employeeTitlesHistoryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmployeeTitlesHistoryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _employeeTitlesHistoryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmployeeTitlesHistory.class;
	}

	@Override
	public String getModelClassName() {
		return EmployeeTitlesHistory.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("employeeTitlesHistoryId", getEmployeeTitlesHistoryId());
		attributes.put("employeeId", getEmployeeId());
		attributes.put("titlesId", getTitlesId());
		attributes.put("setDate", getSetDate());
		attributes.put("note", getNote());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long employeeTitlesHistoryId = (Long)attributes.get(
				"employeeTitlesHistoryId");

		if (employeeTitlesHistoryId != null) {
			setEmployeeTitlesHistoryId(employeeTitlesHistoryId);
		}

		Long employeeId = (Long)attributes.get("employeeId");

		if (employeeId != null) {
			setEmployeeId(employeeId);
		}

		Long titlesId = (Long)attributes.get("titlesId");

		if (titlesId != null) {
			setTitlesId(titlesId);
		}

		Date setDate = (Date)attributes.get("setDate");

		if (setDate != null) {
			setSetDate(setDate);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public long getEmployeeTitlesHistoryId() {
		return _employeeTitlesHistoryId;
	}

	@Override
	public void setEmployeeTitlesHistoryId(long employeeTitlesHistoryId) {
		_employeeTitlesHistoryId = employeeTitlesHistoryId;
	}

	@JSON
	@Override
	public long getEmployeeId() {
		return _employeeId;
	}

	@Override
	public void setEmployeeId(long employeeId) {
		_employeeId = employeeId;
	}

	@JSON
	@Override
	public long getTitlesId() {
		return _titlesId;
	}

	@Override
	public void setTitlesId(long titlesId) {
		_titlesId = titlesId;
	}

	@JSON
	@Override
	public Date getSetDate() {
		return _setDate;
	}

	@Override
	public void setSetDate(Date setDate) {
		_setDate = setDate;
	}

	@JSON
	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EmployeeTitlesHistory.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmployeeTitlesHistory toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EmployeeTitlesHistory)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmployeeTitlesHistoryImpl employeeTitlesHistoryImpl = new EmployeeTitlesHistoryImpl();

		employeeTitlesHistoryImpl.setEmployeeTitlesHistoryId(getEmployeeTitlesHistoryId());
		employeeTitlesHistoryImpl.setEmployeeId(getEmployeeId());
		employeeTitlesHistoryImpl.setTitlesId(getTitlesId());
		employeeTitlesHistoryImpl.setSetDate(getSetDate());
		employeeTitlesHistoryImpl.setNote(getNote());
		employeeTitlesHistoryImpl.setGroupId(getGroupId());
		employeeTitlesHistoryImpl.setCompanyId(getCompanyId());
		employeeTitlesHistoryImpl.setUserId(getUserId());
		employeeTitlesHistoryImpl.setCreateDate(getCreateDate());
		employeeTitlesHistoryImpl.setModifiedDate(getModifiedDate());

		employeeTitlesHistoryImpl.resetOriginalValues();

		return employeeTitlesHistoryImpl;
	}

	@Override
	public int compareTo(EmployeeTitlesHistory employeeTitlesHistory) {
		long primaryKey = employeeTitlesHistory.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmployeeTitlesHistory)) {
			return false;
		}

		EmployeeTitlesHistory employeeTitlesHistory = (EmployeeTitlesHistory)obj;

		long primaryKey = employeeTitlesHistory.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<EmployeeTitlesHistory> toCacheModel() {
		EmployeeTitlesHistoryCacheModel employeeTitlesHistoryCacheModel = new EmployeeTitlesHistoryCacheModel();

		employeeTitlesHistoryCacheModel.employeeTitlesHistoryId = getEmployeeTitlesHistoryId();

		employeeTitlesHistoryCacheModel.employeeId = getEmployeeId();

		employeeTitlesHistoryCacheModel.titlesId = getTitlesId();

		Date setDate = getSetDate();

		if (setDate != null) {
			employeeTitlesHistoryCacheModel.setDate = setDate.getTime();
		}
		else {
			employeeTitlesHistoryCacheModel.setDate = Long.MIN_VALUE;
		}

		employeeTitlesHistoryCacheModel.note = getNote();

		String note = employeeTitlesHistoryCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			employeeTitlesHistoryCacheModel.note = null;
		}

		employeeTitlesHistoryCacheModel.groupId = getGroupId();

		employeeTitlesHistoryCacheModel.companyId = getCompanyId();

		employeeTitlesHistoryCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			employeeTitlesHistoryCacheModel.createDate = createDate.getTime();
		}
		else {
			employeeTitlesHistoryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			employeeTitlesHistoryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			employeeTitlesHistoryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return employeeTitlesHistoryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(21);

		sb.append("{employeeTitlesHistoryId=");
		sb.append(getEmployeeTitlesHistoryId());
		sb.append(", employeeId=");
		sb.append(getEmployeeId());
		sb.append(", titlesId=");
		sb.append(getTitlesId());
		sb.append(", setDate=");
		sb.append(getSetDate());
		sb.append(", note=");
		sb.append(getNote());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(34);

		sb.append("<model><model-name>");
		sb.append("vn.com.ecopharma.emp.model.EmployeeTitlesHistory");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>employeeTitlesHistoryId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeTitlesHistoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>employeeId</column-name><column-value><![CDATA[");
		sb.append(getEmployeeId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>titlesId</column-name><column-value><![CDATA[");
		sb.append(getTitlesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>setDate</column-name><column-value><![CDATA[");
		sb.append(getSetDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EmployeeTitlesHistory.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EmployeeTitlesHistory.class
		};
	private long _employeeTitlesHistoryId;
	private long _employeeId;
	private long _titlesId;
	private Date _setDate;
	private String _note;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private EmployeeTitlesHistory _escapedModel;
}