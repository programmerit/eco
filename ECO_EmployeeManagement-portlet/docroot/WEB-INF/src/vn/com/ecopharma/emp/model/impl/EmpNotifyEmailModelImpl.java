/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.com.ecopharma.emp.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.com.ecopharma.emp.model.EmpNotifyEmail;
import vn.com.ecopharma.emp.model.EmpNotifyEmailModel;
import vn.com.ecopharma.emp.model.EmpNotifyEmailSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the EmpNotifyEmail service. Represents a row in the &quot;eco_em_portlet_EmpNotifyEmail&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.com.ecopharma.emp.model.EmpNotifyEmailModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmpNotifyEmailImpl}.
 * </p>
 *
 * @author tvt
 * @see EmpNotifyEmailImpl
 * @see vn.com.ecopharma.emp.model.EmpNotifyEmail
 * @see vn.com.ecopharma.emp.model.EmpNotifyEmailModel
 * @generated
 */
@JSON(strict = true)
public class EmpNotifyEmailModelImpl extends BaseModelImpl<EmpNotifyEmail>
	implements EmpNotifyEmailModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a emp notify email model instance should use the {@link vn.com.ecopharma.emp.model.EmpNotifyEmail} interface instead.
	 */
	public static final String TABLE_NAME = "eco_em_portlet_EmpNotifyEmail";
	public static final Object[][] TABLE_COLUMNS = {
			{ "empNotifyEmailId", Types.BIGINT },
			{ "empId", Types.BIGINT },
			{ "notifyType", Types.VARCHAR },
			{ "status", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table eco_em_portlet_EmpNotifyEmail (empNotifyEmailId LONG not null primary key,empId LONG,notifyType VARCHAR(75) null,status VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table eco_em_portlet_EmpNotifyEmail";
	public static final String ORDER_BY_JPQL = " ORDER BY empNotifyEmail.empNotifyEmailId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY eco_em_portlet_EmpNotifyEmail.empNotifyEmailId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.com.ecopharma.emp.model.EmpNotifyEmail"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.com.ecopharma.emp.model.EmpNotifyEmail"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.com.ecopharma.emp.model.EmpNotifyEmail"),
			true);
	public static long STATUS_COLUMN_BITMASK = 1L;
	public static long EMPNOTIFYEMAILID_COLUMN_BITMASK = 2L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static EmpNotifyEmail toModel(EmpNotifyEmailSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		EmpNotifyEmail model = new EmpNotifyEmailImpl();

		model.setEmpNotifyEmailId(soapModel.getEmpNotifyEmailId());
		model.setEmpId(soapModel.getEmpId());
		model.setNotifyType(soapModel.getNotifyType());
		model.setStatus(soapModel.getStatus());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<EmpNotifyEmail> toModels(EmpNotifyEmailSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<EmpNotifyEmail> models = new ArrayList<EmpNotifyEmail>(soapModels.length);

		for (EmpNotifyEmailSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.com.ecopharma.emp.model.EmpNotifyEmail"));

	public EmpNotifyEmailModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _empNotifyEmailId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmpNotifyEmailId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _empNotifyEmailId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmpNotifyEmail.class;
	}

	@Override
	public String getModelClassName() {
		return EmpNotifyEmail.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("empNotifyEmailId", getEmpNotifyEmailId());
		attributes.put("empId", getEmpId());
		attributes.put("notifyType", getNotifyType());
		attributes.put("status", getStatus());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long empNotifyEmailId = (Long)attributes.get("empNotifyEmailId");

		if (empNotifyEmailId != null) {
			setEmpNotifyEmailId(empNotifyEmailId);
		}

		Long empId = (Long)attributes.get("empId");

		if (empId != null) {
			setEmpId(empId);
		}

		String notifyType = (String)attributes.get("notifyType");

		if (notifyType != null) {
			setNotifyType(notifyType);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}
	}

	@JSON
	@Override
	public long getEmpNotifyEmailId() {
		return _empNotifyEmailId;
	}

	@Override
	public void setEmpNotifyEmailId(long empNotifyEmailId) {
		_empNotifyEmailId = empNotifyEmailId;
	}

	@JSON
	@Override
	public long getEmpId() {
		return _empId;
	}

	@Override
	public void setEmpId(long empId) {
		_empId = empId;
	}

	@JSON
	@Override
	public String getNotifyType() {
		if (_notifyType == null) {
			return StringPool.BLANK;
		}
		else {
			return _notifyType;
		}
	}

	@Override
	public void setNotifyType(String notifyType) {
		_notifyType = notifyType;
	}

	@JSON
	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_columnBitmask |= STATUS_COLUMN_BITMASK;

		if (_originalStatus == null) {
			_originalStatus = _status;
		}

		_status = status;
	}

	public String getOriginalStatus() {
		return GetterUtil.getString(_originalStatus);
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(0,
			EmpNotifyEmail.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmpNotifyEmail toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EmpNotifyEmail)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmpNotifyEmailImpl empNotifyEmailImpl = new EmpNotifyEmailImpl();

		empNotifyEmailImpl.setEmpNotifyEmailId(getEmpNotifyEmailId());
		empNotifyEmailImpl.setEmpId(getEmpId());
		empNotifyEmailImpl.setNotifyType(getNotifyType());
		empNotifyEmailImpl.setStatus(getStatus());

		empNotifyEmailImpl.resetOriginalValues();

		return empNotifyEmailImpl;
	}

	@Override
	public int compareTo(EmpNotifyEmail empNotifyEmail) {
		long primaryKey = empNotifyEmail.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmpNotifyEmail)) {
			return false;
		}

		EmpNotifyEmail empNotifyEmail = (EmpNotifyEmail)obj;

		long primaryKey = empNotifyEmail.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		EmpNotifyEmailModelImpl empNotifyEmailModelImpl = this;

		empNotifyEmailModelImpl._originalStatus = empNotifyEmailModelImpl._status;

		empNotifyEmailModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<EmpNotifyEmail> toCacheModel() {
		EmpNotifyEmailCacheModel empNotifyEmailCacheModel = new EmpNotifyEmailCacheModel();

		empNotifyEmailCacheModel.empNotifyEmailId = getEmpNotifyEmailId();

		empNotifyEmailCacheModel.empId = getEmpId();

		empNotifyEmailCacheModel.notifyType = getNotifyType();

		String notifyType = empNotifyEmailCacheModel.notifyType;

		if ((notifyType != null) && (notifyType.length() == 0)) {
			empNotifyEmailCacheModel.notifyType = null;
		}

		empNotifyEmailCacheModel.status = getStatus();

		String status = empNotifyEmailCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			empNotifyEmailCacheModel.status = null;
		}

		return empNotifyEmailCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(9);

		sb.append("{empNotifyEmailId=");
		sb.append(getEmpNotifyEmailId());
		sb.append(", empId=");
		sb.append(getEmpId());
		sb.append(", notifyType=");
		sb.append(getNotifyType());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(16);

		sb.append("<model><model-name>");
		sb.append("vn.com.ecopharma.emp.model.EmpNotifyEmail");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>empNotifyEmailId</column-name><column-value><![CDATA[");
		sb.append(getEmpNotifyEmailId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>empId</column-name><column-value><![CDATA[");
		sb.append(getEmpId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>notifyType</column-name><column-value><![CDATA[");
		sb.append(getNotifyType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EmpNotifyEmail.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EmpNotifyEmail.class
		};
	private long _empNotifyEmailId;
	private long _empId;
	private String _notifyType;
	private String _status;
	private String _originalStatus;
	private long _columnBitmask;
	private EmpNotifyEmail _escapedModel;
}