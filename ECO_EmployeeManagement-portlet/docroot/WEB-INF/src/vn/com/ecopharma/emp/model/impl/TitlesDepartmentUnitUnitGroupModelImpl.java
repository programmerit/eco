/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.com.ecopharma.emp.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.com.ecopharma.emp.model.TitlesDepartmentUnitUnitGroup;
import vn.com.ecopharma.emp.model.TitlesDepartmentUnitUnitGroupModel;
import vn.com.ecopharma.emp.model.TitlesDepartmentUnitUnitGroupSoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the TitlesDepartmentUnitUnitGroup service. Represents a row in the &quot;eco_em_portlet_TitlesDepartmentUnitUnitGroup&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.com.ecopharma.emp.model.TitlesDepartmentUnitUnitGroupModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link TitlesDepartmentUnitUnitGroupImpl}.
 * </p>
 *
 * @author tvt
 * @see TitlesDepartmentUnitUnitGroupImpl
 * @see vn.com.ecopharma.emp.model.TitlesDepartmentUnitUnitGroup
 * @see vn.com.ecopharma.emp.model.TitlesDepartmentUnitUnitGroupModel
 * @generated
 */
@JSON(strict = true)
public class TitlesDepartmentUnitUnitGroupModelImpl extends BaseModelImpl<TitlesDepartmentUnitUnitGroup>
	implements TitlesDepartmentUnitUnitGroupModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a titles department unit unit group model instance should use the {@link vn.com.ecopharma.emp.model.TitlesDepartmentUnitUnitGroup} interface instead.
	 */
	public static final String TABLE_NAME = "eco_em_portlet_TitlesDepartmentUnitUnitGroup";
	public static final Object[][] TABLE_COLUMNS = {
			{ "titlesDepartmentUnitUnitGroupId", Types.BIGINT },
			{ "titlesId", Types.BIGINT },
			{ "departmentId", Types.BIGINT },
			{ "unitId", Types.BIGINT },
			{ "unitGroupId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table eco_em_portlet_TitlesDepartmentUnitUnitGroup (titlesDepartmentUnitUnitGroupId LONG not null primary key,titlesId LONG,departmentId LONG,unitId LONG,unitGroupId LONG,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table eco_em_portlet_TitlesDepartmentUnitUnitGroup";
	public static final String ORDER_BY_JPQL = " ORDER BY titlesDepartmentUnitUnitGroup.titlesDepartmentUnitUnitGroupId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY eco_em_portlet_TitlesDepartmentUnitUnitGroup.titlesDepartmentUnitUnitGroupId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.com.ecopharma.emp.model.TitlesDepartmentUnitUnitGroup"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.com.ecopharma.emp.model.TitlesDepartmentUnitUnitGroup"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.vn.com.ecopharma.emp.model.TitlesDepartmentUnitUnitGroup"),
			true);
	public static long DEPARTMENTID_COLUMN_BITMASK = 1L;
	public static long TITLESID_COLUMN_BITMASK = 2L;
	public static long UNITGROUPID_COLUMN_BITMASK = 4L;
	public static long UNITID_COLUMN_BITMASK = 8L;
	public static long TITLESDEPARTMENTUNITUNITGROUPID_COLUMN_BITMASK = 16L;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static TitlesDepartmentUnitUnitGroup toModel(
		TitlesDepartmentUnitUnitGroupSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		TitlesDepartmentUnitUnitGroup model = new TitlesDepartmentUnitUnitGroupImpl();

		model.setTitlesDepartmentUnitUnitGroupId(soapModel.getTitlesDepartmentUnitUnitGroupId());
		model.setTitlesId(soapModel.getTitlesId());
		model.setDepartmentId(soapModel.getDepartmentId());
		model.setUnitId(soapModel.getUnitId());
		model.setUnitGroupId(soapModel.getUnitGroupId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<TitlesDepartmentUnitUnitGroup> toModels(
		TitlesDepartmentUnitUnitGroupSoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<TitlesDepartmentUnitUnitGroup> models = new ArrayList<TitlesDepartmentUnitUnitGroup>(soapModels.length);

		for (TitlesDepartmentUnitUnitGroupSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.com.ecopharma.emp.model.TitlesDepartmentUnitUnitGroup"));

	public TitlesDepartmentUnitUnitGroupModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _titlesDepartmentUnitUnitGroupId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setTitlesDepartmentUnitUnitGroupId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _titlesDepartmentUnitUnitGroupId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return TitlesDepartmentUnitUnitGroup.class;
	}

	@Override
	public String getModelClassName() {
		return TitlesDepartmentUnitUnitGroup.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("titlesDepartmentUnitUnitGroupId",
			getTitlesDepartmentUnitUnitGroupId());
		attributes.put("titlesId", getTitlesId());
		attributes.put("departmentId", getDepartmentId());
		attributes.put("unitId", getUnitId());
		attributes.put("unitGroupId", getUnitGroupId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long titlesDepartmentUnitUnitGroupId = (Long)attributes.get(
				"titlesDepartmentUnitUnitGroupId");

		if (titlesDepartmentUnitUnitGroupId != null) {
			setTitlesDepartmentUnitUnitGroupId(titlesDepartmentUnitUnitGroupId);
		}

		Long titlesId = (Long)attributes.get("titlesId");

		if (titlesId != null) {
			setTitlesId(titlesId);
		}

		Long departmentId = (Long)attributes.get("departmentId");

		if (departmentId != null) {
			setDepartmentId(departmentId);
		}

		Long unitId = (Long)attributes.get("unitId");

		if (unitId != null) {
			setUnitId(unitId);
		}

		Long unitGroupId = (Long)attributes.get("unitGroupId");

		if (unitGroupId != null) {
			setUnitGroupId(unitGroupId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public long getTitlesDepartmentUnitUnitGroupId() {
		return _titlesDepartmentUnitUnitGroupId;
	}

	@Override
	public void setTitlesDepartmentUnitUnitGroupId(
		long titlesDepartmentUnitUnitGroupId) {
		_titlesDepartmentUnitUnitGroupId = titlesDepartmentUnitUnitGroupId;
	}

	@JSON
	@Override
	public long getTitlesId() {
		return _titlesId;
	}

	@Override
	public void setTitlesId(long titlesId) {
		_columnBitmask |= TITLESID_COLUMN_BITMASK;

		if (!_setOriginalTitlesId) {
			_setOriginalTitlesId = true;

			_originalTitlesId = _titlesId;
		}

		_titlesId = titlesId;
	}

	public long getOriginalTitlesId() {
		return _originalTitlesId;
	}

	@JSON
	@Override
	public long getDepartmentId() {
		return _departmentId;
	}

	@Override
	public void setDepartmentId(long departmentId) {
		_columnBitmask |= DEPARTMENTID_COLUMN_BITMASK;

		if (!_setOriginalDepartmentId) {
			_setOriginalDepartmentId = true;

			_originalDepartmentId = _departmentId;
		}

		_departmentId = departmentId;
	}

	public long getOriginalDepartmentId() {
		return _originalDepartmentId;
	}

	@JSON
	@Override
	public long getUnitId() {
		return _unitId;
	}

	@Override
	public void setUnitId(long unitId) {
		_columnBitmask |= UNITID_COLUMN_BITMASK;

		if (!_setOriginalUnitId) {
			_setOriginalUnitId = true;

			_originalUnitId = _unitId;
		}

		_unitId = unitId;
	}

	public long getOriginalUnitId() {
		return _originalUnitId;
	}

	@JSON
	@Override
	public long getUnitGroupId() {
		return _unitGroupId;
	}

	@Override
	public void setUnitGroupId(long unitGroupId) {
		_columnBitmask |= UNITGROUPID_COLUMN_BITMASK;

		if (!_setOriginalUnitGroupId) {
			_setOriginalUnitGroupId = true;

			_originalUnitGroupId = _unitGroupId;
		}

		_unitGroupId = unitGroupId;
	}

	public long getOriginalUnitGroupId() {
		return _originalUnitGroupId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			TitlesDepartmentUnitUnitGroup.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public TitlesDepartmentUnitUnitGroup toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (TitlesDepartmentUnitUnitGroup)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		TitlesDepartmentUnitUnitGroupImpl titlesDepartmentUnitUnitGroupImpl = new TitlesDepartmentUnitUnitGroupImpl();

		titlesDepartmentUnitUnitGroupImpl.setTitlesDepartmentUnitUnitGroupId(getTitlesDepartmentUnitUnitGroupId());
		titlesDepartmentUnitUnitGroupImpl.setTitlesId(getTitlesId());
		titlesDepartmentUnitUnitGroupImpl.setDepartmentId(getDepartmentId());
		titlesDepartmentUnitUnitGroupImpl.setUnitId(getUnitId());
		titlesDepartmentUnitUnitGroupImpl.setUnitGroupId(getUnitGroupId());
		titlesDepartmentUnitUnitGroupImpl.setGroupId(getGroupId());
		titlesDepartmentUnitUnitGroupImpl.setCompanyId(getCompanyId());
		titlesDepartmentUnitUnitGroupImpl.setUserId(getUserId());
		titlesDepartmentUnitUnitGroupImpl.setUserName(getUserName());
		titlesDepartmentUnitUnitGroupImpl.setCreateDate(getCreateDate());
		titlesDepartmentUnitUnitGroupImpl.setModifiedDate(getModifiedDate());

		titlesDepartmentUnitUnitGroupImpl.resetOriginalValues();

		return titlesDepartmentUnitUnitGroupImpl;
	}

	@Override
	public int compareTo(
		TitlesDepartmentUnitUnitGroup titlesDepartmentUnitUnitGroup) {
		long primaryKey = titlesDepartmentUnitUnitGroup.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof TitlesDepartmentUnitUnitGroup)) {
			return false;
		}

		TitlesDepartmentUnitUnitGroup titlesDepartmentUnitUnitGroup = (TitlesDepartmentUnitUnitGroup)obj;

		long primaryKey = titlesDepartmentUnitUnitGroup.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		TitlesDepartmentUnitUnitGroupModelImpl titlesDepartmentUnitUnitGroupModelImpl =
			this;

		titlesDepartmentUnitUnitGroupModelImpl._originalTitlesId = titlesDepartmentUnitUnitGroupModelImpl._titlesId;

		titlesDepartmentUnitUnitGroupModelImpl._setOriginalTitlesId = false;

		titlesDepartmentUnitUnitGroupModelImpl._originalDepartmentId = titlesDepartmentUnitUnitGroupModelImpl._departmentId;

		titlesDepartmentUnitUnitGroupModelImpl._setOriginalDepartmentId = false;

		titlesDepartmentUnitUnitGroupModelImpl._originalUnitId = titlesDepartmentUnitUnitGroupModelImpl._unitId;

		titlesDepartmentUnitUnitGroupModelImpl._setOriginalUnitId = false;

		titlesDepartmentUnitUnitGroupModelImpl._originalUnitGroupId = titlesDepartmentUnitUnitGroupModelImpl._unitGroupId;

		titlesDepartmentUnitUnitGroupModelImpl._setOriginalUnitGroupId = false;

		titlesDepartmentUnitUnitGroupModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<TitlesDepartmentUnitUnitGroup> toCacheModel() {
		TitlesDepartmentUnitUnitGroupCacheModel titlesDepartmentUnitUnitGroupCacheModel =
			new TitlesDepartmentUnitUnitGroupCacheModel();

		titlesDepartmentUnitUnitGroupCacheModel.titlesDepartmentUnitUnitGroupId = getTitlesDepartmentUnitUnitGroupId();

		titlesDepartmentUnitUnitGroupCacheModel.titlesId = getTitlesId();

		titlesDepartmentUnitUnitGroupCacheModel.departmentId = getDepartmentId();

		titlesDepartmentUnitUnitGroupCacheModel.unitId = getUnitId();

		titlesDepartmentUnitUnitGroupCacheModel.unitGroupId = getUnitGroupId();

		titlesDepartmentUnitUnitGroupCacheModel.groupId = getGroupId();

		titlesDepartmentUnitUnitGroupCacheModel.companyId = getCompanyId();

		titlesDepartmentUnitUnitGroupCacheModel.userId = getUserId();

		titlesDepartmentUnitUnitGroupCacheModel.userName = getUserName();

		String userName = titlesDepartmentUnitUnitGroupCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			titlesDepartmentUnitUnitGroupCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			titlesDepartmentUnitUnitGroupCacheModel.createDate = createDate.getTime();
		}
		else {
			titlesDepartmentUnitUnitGroupCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			titlesDepartmentUnitUnitGroupCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			titlesDepartmentUnitUnitGroupCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return titlesDepartmentUnitUnitGroupCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{titlesDepartmentUnitUnitGroupId=");
		sb.append(getTitlesDepartmentUnitUnitGroupId());
		sb.append(", titlesId=");
		sb.append(getTitlesId());
		sb.append(", departmentId=");
		sb.append(getDepartmentId());
		sb.append(", unitId=");
		sb.append(getUnitId());
		sb.append(", unitGroupId=");
		sb.append(getUnitGroupId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("vn.com.ecopharma.emp.model.TitlesDepartmentUnitUnitGroup");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>titlesDepartmentUnitUnitGroupId</column-name><column-value><![CDATA[");
		sb.append(getTitlesDepartmentUnitUnitGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>titlesId</column-name><column-value><![CDATA[");
		sb.append(getTitlesId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>departmentId</column-name><column-value><![CDATA[");
		sb.append(getDepartmentId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>unitId</column-name><column-value><![CDATA[");
		sb.append(getUnitId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>unitGroupId</column-name><column-value><![CDATA[");
		sb.append(getUnitGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = TitlesDepartmentUnitUnitGroup.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			TitlesDepartmentUnitUnitGroup.class
		};
	private long _titlesDepartmentUnitUnitGroupId;
	private long _titlesId;
	private long _originalTitlesId;
	private boolean _setOriginalTitlesId;
	private long _departmentId;
	private long _originalDepartmentId;
	private boolean _setOriginalDepartmentId;
	private long _unitId;
	private long _originalUnitId;
	private boolean _setOriginalUnitId;
	private long _unitGroupId;
	private long _originalUnitGroupId;
	private boolean _setOriginalUnitGroupId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _columnBitmask;
	private TitlesDepartmentUnitUnitGroup _escapedModel;
}