/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package vn.com.ecopharma.emp.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import vn.com.ecopharma.emp.model.EmpActionHistory;
import vn.com.ecopharma.emp.model.EmpActionHistoryModel;
import vn.com.ecopharma.emp.model.EmpActionHistorySoap;

import java.io.Serializable;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * The base model implementation for the EmpActionHistory service. Represents a row in the &quot;eco_em_portlet_EmpActionHistory&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link vn.com.ecopharma.emp.model.EmpActionHistoryModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EmpActionHistoryImpl}.
 * </p>
 *
 * @author tvt
 * @see EmpActionHistoryImpl
 * @see vn.com.ecopharma.emp.model.EmpActionHistory
 * @see vn.com.ecopharma.emp.model.EmpActionHistoryModel
 * @generated
 */
@JSON(strict = true)
public class EmpActionHistoryModelImpl extends BaseModelImpl<EmpActionHistory>
	implements EmpActionHistoryModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a emp action history model instance should use the {@link vn.com.ecopharma.emp.model.EmpActionHistory} interface instead.
	 */
	public static final String TABLE_NAME = "eco_em_portlet_EmpActionHistory";
	public static final Object[][] TABLE_COLUMNS = {
			{ "empActionHistoryId", Types.BIGINT },
			{ "empId", Types.BIGINT },
			{ "action", Types.VARCHAR },
			{ "performedBy", Types.BIGINT },
			{ "description", Types.VARCHAR },
			{ "status", Types.VARCHAR },
			{ "refId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP }
		};
	public static final String TABLE_SQL_CREATE = "create table eco_em_portlet_EmpActionHistory (empActionHistoryId LONG not null primary key,empId LONG,action VARCHAR(75) null,performedBy LONG,description TEXT null,status VARCHAR(75) null,refId LONG,groupId LONG,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null)";
	public static final String TABLE_SQL_DROP = "drop table eco_em_portlet_EmpActionHistory";
	public static final String ORDER_BY_JPQL = " ORDER BY empActionHistory.empActionHistoryId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY eco_em_portlet_EmpActionHistory.empActionHistoryId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.vn.com.ecopharma.emp.model.EmpActionHistory"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.vn.com.ecopharma.emp.model.EmpActionHistory"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static EmpActionHistory toModel(EmpActionHistorySoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		EmpActionHistory model = new EmpActionHistoryImpl();

		model.setEmpActionHistoryId(soapModel.getEmpActionHistoryId());
		model.setEmpId(soapModel.getEmpId());
		model.setAction(soapModel.getAction());
		model.setPerformedBy(soapModel.getPerformedBy());
		model.setDescription(soapModel.getDescription());
		model.setStatus(soapModel.getStatus());
		model.setRefId(soapModel.getRefId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setUserId(soapModel.getUserId());
		model.setUserName(soapModel.getUserName());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<EmpActionHistory> toModels(
		EmpActionHistorySoap[] soapModels) {
		if (soapModels == null) {
			return null;
		}

		List<EmpActionHistory> models = new ArrayList<EmpActionHistory>(soapModels.length);

		for (EmpActionHistorySoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.vn.com.ecopharma.emp.model.EmpActionHistory"));

	public EmpActionHistoryModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _empActionHistoryId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEmpActionHistoryId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _empActionHistoryId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EmpActionHistory.class;
	}

	@Override
	public String getModelClassName() {
		return EmpActionHistory.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("empActionHistoryId", getEmpActionHistoryId());
		attributes.put("empId", getEmpId());
		attributes.put("action", getAction());
		attributes.put("performedBy", getPerformedBy());
		attributes.put("description", getDescription());
		attributes.put("status", getStatus());
		attributes.put("refId", getRefId());
		attributes.put("groupId", getGroupId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long empActionHistoryId = (Long)attributes.get("empActionHistoryId");

		if (empActionHistoryId != null) {
			setEmpActionHistoryId(empActionHistoryId);
		}

		Long empId = (Long)attributes.get("empId");

		if (empId != null) {
			setEmpId(empId);
		}

		String action = (String)attributes.get("action");

		if (action != null) {
			setAction(action);
		}

		Long performedBy = (Long)attributes.get("performedBy");

		if (performedBy != null) {
			setPerformedBy(performedBy);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		Long refId = (Long)attributes.get("refId");

		if (refId != null) {
			setRefId(refId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@JSON
	@Override
	public long getEmpActionHistoryId() {
		return _empActionHistoryId;
	}

	@Override
	public void setEmpActionHistoryId(long empActionHistoryId) {
		_empActionHistoryId = empActionHistoryId;
	}

	@JSON
	@Override
	public long getEmpId() {
		return _empId;
	}

	@Override
	public void setEmpId(long empId) {
		_empId = empId;
	}

	@JSON
	@Override
	public String getAction() {
		if (_action == null) {
			return StringPool.BLANK;
		}
		else {
			return _action;
		}
	}

	@Override
	public void setAction(String action) {
		_action = action;
	}

	@JSON
	@Override
	public long getPerformedBy() {
		return _performedBy;
	}

	@Override
	public void setPerformedBy(long performedBy) {
		_performedBy = performedBy;
	}

	@JSON
	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@JSON
	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@JSON
	@Override
	public long getRefId() {
		return _refId;
	}

	@Override
	public void setRefId(long refId) {
		_refId = refId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@JSON
	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@JSON
	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EmpActionHistory.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EmpActionHistory toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EmpActionHistory)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EmpActionHistoryImpl empActionHistoryImpl = new EmpActionHistoryImpl();

		empActionHistoryImpl.setEmpActionHistoryId(getEmpActionHistoryId());
		empActionHistoryImpl.setEmpId(getEmpId());
		empActionHistoryImpl.setAction(getAction());
		empActionHistoryImpl.setPerformedBy(getPerformedBy());
		empActionHistoryImpl.setDescription(getDescription());
		empActionHistoryImpl.setStatus(getStatus());
		empActionHistoryImpl.setRefId(getRefId());
		empActionHistoryImpl.setGroupId(getGroupId());
		empActionHistoryImpl.setCompanyId(getCompanyId());
		empActionHistoryImpl.setUserId(getUserId());
		empActionHistoryImpl.setUserName(getUserName());
		empActionHistoryImpl.setCreateDate(getCreateDate());
		empActionHistoryImpl.setModifiedDate(getModifiedDate());

		empActionHistoryImpl.resetOriginalValues();

		return empActionHistoryImpl;
	}

	@Override
	public int compareTo(EmpActionHistory empActionHistory) {
		long primaryKey = empActionHistory.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EmpActionHistory)) {
			return false;
		}

		EmpActionHistory empActionHistory = (EmpActionHistory)obj;

		long primaryKey = empActionHistory.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<EmpActionHistory> toCacheModel() {
		EmpActionHistoryCacheModel empActionHistoryCacheModel = new EmpActionHistoryCacheModel();

		empActionHistoryCacheModel.empActionHistoryId = getEmpActionHistoryId();

		empActionHistoryCacheModel.empId = getEmpId();

		empActionHistoryCacheModel.action = getAction();

		String action = empActionHistoryCacheModel.action;

		if ((action != null) && (action.length() == 0)) {
			empActionHistoryCacheModel.action = null;
		}

		empActionHistoryCacheModel.performedBy = getPerformedBy();

		empActionHistoryCacheModel.description = getDescription();

		String description = empActionHistoryCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			empActionHistoryCacheModel.description = null;
		}

		empActionHistoryCacheModel.status = getStatus();

		String status = empActionHistoryCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			empActionHistoryCacheModel.status = null;
		}

		empActionHistoryCacheModel.refId = getRefId();

		empActionHistoryCacheModel.groupId = getGroupId();

		empActionHistoryCacheModel.companyId = getCompanyId();

		empActionHistoryCacheModel.userId = getUserId();

		empActionHistoryCacheModel.userName = getUserName();

		String userName = empActionHistoryCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			empActionHistoryCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			empActionHistoryCacheModel.createDate = createDate.getTime();
		}
		else {
			empActionHistoryCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			empActionHistoryCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			empActionHistoryCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return empActionHistoryCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(27);

		sb.append("{empActionHistoryId=");
		sb.append(getEmpActionHistoryId());
		sb.append(", empId=");
		sb.append(getEmpId());
		sb.append(", action=");
		sb.append(getAction());
		sb.append(", performedBy=");
		sb.append(getPerformedBy());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", refId=");
		sb.append(getRefId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(43);

		sb.append("<model><model-name>");
		sb.append("vn.com.ecopharma.emp.model.EmpActionHistory");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>empActionHistoryId</column-name><column-value><![CDATA[");
		sb.append(getEmpActionHistoryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>empId</column-name><column-value><![CDATA[");
		sb.append(getEmpId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>action</column-name><column-value><![CDATA[");
		sb.append(getAction());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>performedBy</column-name><column-value><![CDATA[");
		sb.append(getPerformedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>refId</column-name><column-value><![CDATA[");
		sb.append(getRefId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EmpActionHistory.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EmpActionHistory.class
		};
	private long _empActionHistoryId;
	private long _empId;
	private String _action;
	private long _performedBy;
	private String _description;
	private String _status;
	private long _refId;
	private long _groupId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private EmpActionHistory _escapedModel;
}